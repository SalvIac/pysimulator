# -*- coding: utf-8 -*-
# pysimulator
# Copyright (C) 2021-2022 Salvatore Iacoletti
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#! /usr/bin/env python


import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import app_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    app_support.set_Tk_var()
    top = AftershockApp (root)
    app_support.init(root, top)
    root.mainloop()

w = None
def create_AftershockApp(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_AftershockApp(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    app_support.set_Tk_var()
    top = AftershockApp (w)
    app_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_AftershockApp():
    global w
    w.destroy()
    w = None

class AftershockApp:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("800x520+2497+186")
        top.minsize(120, 1)
        top.maxsize(3844, 1041)
        top.resizable(1,  1)
        top.title("AftershockApp")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.menubar.add_command(
                label="File")

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.Main = ttk.Notebook(top)
        self.Main.place(relx=0.02, rely=0.019, relheight=0.96, relwidth=0.96)
        self.Main.configure(takefocus="")
        self.MainInputCatalog = tk.Frame(self.Main)
        self.Main.add(self.MainInputCatalog, padding=3)
        self.Main.tab(0, text="InputCatalog",compound="left",underline="-1",)
        self.MainInputCatalog.configure(background="#d9d9d9")
        self.MainInputCatalog.configure(highlightbackground="#d9d9d9")
        self.MainInputCatalog.configure(highlightcolor="black")
        self.MainExposure = tk.Frame(self.Main)
        self.Main.add(self.MainExposure, padding=3)
        self.Main.tab(1, text="Exposure",compound="none",underline="-1",)
        self.MainExposure.configure(background="#d9d9d9")
        self.MainExposure.configure(highlightbackground="#d9d9d9")
        self.MainExposure.configure(highlightcolor="black")
        self.MainETAS = tk.Frame(self.Main)
        self.Main.add(self.MainETAS, padding=3)
        self.Main.tab(2, text="ETAS",compound="none",underline="-1",)
        self.MainETAS.configure(background="#d9d9d9")
        self.MainETAS.configure(highlightbackground="#d9d9d9")
        self.MainETAS.configure(highlightcolor="black")
        self.MainEtasPlots = tk.Frame(self.Main)
        self.Main.add(self.MainEtasPlots, padding=3)
        self.Main.tab(3, text="CheckETAS",compound="none",underline="-1",)
        self.MainEtasPlots.configure(background="#d9d9d9")
        self.MainEtasPlots.configure(highlightbackground="#d9d9d9")
        self.MainEtasPlots.configure(highlightcolor="black")
        self.MainGMM = tk.Frame(self.Main)
        self.Main.add(self.MainGMM, padding=3)
        self.Main.tab(4, text="GMM",compound="none",underline="-1",)
        self.MainGMM.configure(background="#d9d9d9")
        self.MainGMM.configure(highlightbackground="#d9d9d9")
        self.MainGMM.configure(highlightcolor="black")
        self.MainVulnerability = tk.Frame(self.Main)
        self.Main.add(self.MainVulnerability, padding=3)
        self.Main.tab(5, text="Vulnerability",compound="none",underline="-1",)
        self.MainVulnerability.configure(background="#d9d9d9")
        self.MainVulnerability.configure(highlightbackground="#d9d9d9")
        self.MainVulnerability.configure(highlightcolor="black")
        self.MainLoss = tk.Frame(self.Main)
        self.Main.add(self.MainLoss, padding=3)
        self.Main.tab(6, text="Loss",compound="none",underline="-1",)
        self.MainLoss.configure(background="#d9d9d9")
        self.MainLoss.configure(highlightbackground="#d9d9d9")
        self.MainLoss.configure(highlightcolor="black")

        self.ButtonFromCsv = tk.Button(self.MainInputCatalog)
        self.ButtonFromCsv.place(relx=0.34, rely=0.03, height=30, width=240)
        self.ButtonFromCsv.configure(activebackground="#ececec")
        self.ButtonFromCsv.configure(activeforeground="#000000")
        self.ButtonFromCsv.configure(background="#d9d9d9")
        self.ButtonFromCsv.configure(command=app_support.upload_csv_catalog)
        self.ButtonFromCsv.configure(disabledforeground="#a3a3a3")
        self.ButtonFromCsv.configure(foreground="#000000")
        self.ButtonFromCsv.configure(highlightbackground="#d9d9d9")
        self.ButtonFromCsv.configure(highlightcolor="black")
        self.ButtonFromCsv.configure(pady="0")
        self.ButtonFromCsv.configure(text='''Upload from csv file''')

        self.ButtonFromOQ = tk.Button(self.MainInputCatalog)
        self.ButtonFromOQ.place(relx=0.275, rely=0.873, height=30, width=167)
        self.ButtonFromOQ.configure(activebackground="#ececec")
        self.ButtonFromOQ.configure(activeforeground="#000000")
        self.ButtonFromOQ.configure(background="#d9d9d9")
        self.ButtonFromOQ.configure(command=app_support.build_catalog_from_oq)
        self.ButtonFromOQ.configure(disabledforeground="#a3a3a3")
        self.ButtonFromOQ.configure(foreground="#000000")
        self.ButtonFromOQ.configure(highlightbackground="#d9d9d9")
        self.ButtonFromOQ.configure(highlightcolor="black")
        self.ButtonFromOQ.configure(pady="0")
        self.ButtonFromOQ.configure(text='''Build from OQ xml file''')

        self.ButtonAddEvent = tk.Button(self.MainInputCatalog)
        self.ButtonAddEvent.place(relx=0.209, rely=0.372, height=30, width=140)
        self.ButtonAddEvent.configure(activebackground="#ececec")
        self.ButtonAddEvent.configure(activeforeground="#000000")
        self.ButtonAddEvent.configure(background="#d9d9d9")
        self.ButtonAddEvent.configure(command=app_support.catalog_add_event)
        self.ButtonAddEvent.configure(disabledforeground="#a3a3a3")
        self.ButtonAddEvent.configure(foreground="#000000")
        self.ButtonAddEvent.configure(highlightbackground="#d9d9d9")
        self.ButtonAddEvent.configure(highlightcolor="black")
        self.ButtonAddEvent.configure(pady="0")
        self.ButtonAddEvent.configure(text='''Add event''')

        self.CheckbuttonAddGeometries = tk.Checkbutton(self.MainInputCatalog)
        self.CheckbuttonAddGeometries.place(relx=0.026, rely=0.793
                , relheight=0.061, relwidth=0.236)
        self.CheckbuttonAddGeometries.configure(activebackground="#ececec")
        self.CheckbuttonAddGeometries.configure(activeforeground="#000000")
        self.CheckbuttonAddGeometries.configure(background="#d9d9d9")
        self.CheckbuttonAddGeometries.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonAddGeometries.configure(foreground="#000000")
        self.CheckbuttonAddGeometries.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonAddGeometries.configure(highlightcolor="black")
        self.CheckbuttonAddGeometries.configure(justify='left')
        self.CheckbuttonAddGeometries.configure(state='disabled')
        self.CheckbuttonAddGeometries.configure(text='''Add rupture geometries''')
        self.CheckbuttonAddGeometries.configure(variable=app_support.add_rupture_geometries_flag)

        self.ButtonPlot2D = tk.Button(self.MainInputCatalog)
        self.ButtonPlot2D.place(relx=0.746, rely=0.793, height=30, width=120)
        self.ButtonPlot2D.configure(activebackground="#ececec")
        self.ButtonPlot2D.configure(activeforeground="#000000")
        self.ButtonPlot2D.configure(background="#d9d9d9")
        self.ButtonPlot2D.configure(command=app_support.plot_2d_catalog)
        self.ButtonPlot2D.configure(disabledforeground="#a3a3a3")
        self.ButtonPlot2D.configure(foreground="#000000")
        self.ButtonPlot2D.configure(highlightbackground="#d9d9d9")
        self.ButtonPlot2D.configure(highlightcolor="black")
        self.ButtonPlot2D.configure(pady="0")
        self.ButtonPlot2D.configure(state='disabled')
        self.ButtonPlot2D.configure(text='''Plot 2D''')

        self.LabelMagnitude = tk.Label(self.MainInputCatalog)
        self.LabelMagnitude.place(relx=0.039, rely=0.116, height=24, width=210)
        self.LabelMagnitude.configure(activebackground="#f9f9f9")
        self.LabelMagnitude.configure(activeforeground="black")
        self.LabelMagnitude.configure(anchor='e')
        self.LabelMagnitude.configure(background="#d9d9d9")
        self.LabelMagnitude.configure(disabledforeground="#a3a3a3")
        self.LabelMagnitude.configure(foreground="#000000")
        self.LabelMagnitude.configure(highlightbackground="#d9d9d9")
        self.LabelMagnitude.configure(highlightcolor="black")
        self.LabelMagnitude.configure(text='''Magnitude (float)''')

        self.LabelLongitude = tk.Label(self.MainInputCatalog)
        self.LabelLongitude.place(relx=0.039, rely=0.175, height=23, width=210)
        self.LabelLongitude.configure(activebackground="#f9f9f9")
        self.LabelLongitude.configure(activeforeground="black")
        self.LabelLongitude.configure(anchor='e')
        self.LabelLongitude.configure(background="#d9d9d9")
        self.LabelLongitude.configure(disabledforeground="#a3a3a3")
        self.LabelLongitude.configure(foreground="#000000")
        self.LabelLongitude.configure(highlightbackground="#d9d9d9")
        self.LabelLongitude.configure(highlightcolor="black")
        self.LabelLongitude.configure(text='''Longitude (float)''')

        self.LabelLatitude = tk.Label(self.MainInputCatalog)
        self.LabelLatitude.place(relx=0.039, rely=0.235, height=23, width=210)
        self.LabelLatitude.configure(activebackground="#f9f9f9")
        self.LabelLatitude.configure(activeforeground="black")
        self.LabelLatitude.configure(anchor='e')
        self.LabelLatitude.configure(background="#d9d9d9")
        self.LabelLatitude.configure(disabledforeground="#a3a3a3")
        self.LabelLatitude.configure(foreground="#000000")
        self.LabelLatitude.configure(highlightbackground="#d9d9d9")
        self.LabelLatitude.configure(highlightcolor="black")
        self.LabelLatitude.configure(text='''Latitude (float)''')

        self.LabelDepth = tk.Label(self.MainInputCatalog)
        self.LabelDepth.place(relx=0.039, rely=0.304, height=23, width=210)
        self.LabelDepth.configure(activebackground="#f9f9f9")
        self.LabelDepth.configure(activeforeground="black")
        self.LabelDepth.configure(anchor='e')
        self.LabelDepth.configure(background="#d9d9d9")
        self.LabelDepth.configure(disabledforeground="#a3a3a3")
        self.LabelDepth.configure(foreground="#000000")
        self.LabelDepth.configure(highlightbackground="#d9d9d9")
        self.LabelDepth.configure(highlightcolor="black")
        self.LabelDepth.configure(text='''Depth (float)''')

        self.LabelDatetime = tk.Label(self.MainInputCatalog)
        self.LabelDatetime.place(relx=0.681, rely=0.116, height=24, width=210)
        self.LabelDatetime.configure(activebackground="#f9f9f9")
        self.LabelDatetime.configure(activeforeground="black")
        self.LabelDatetime.configure(anchor='w')
        self.LabelDatetime.configure(background="#d9d9d9")
        self.LabelDatetime.configure(disabledforeground="#a3a3a3")
        self.LabelDatetime.configure(foreground="#000000")
        self.LabelDatetime.configure(highlightbackground="#d9d9d9")
        self.LabelDatetime.configure(highlightcolor="black")
        self.LabelDatetime.configure(text='''Datetime (YYYY-MM-DD HH:MM:SS)''')

        self.LabelStrike = tk.Label(self.MainInputCatalog)
        self.LabelStrike.place(relx=0.681, rely=0.175, height=23, width=210)
        self.LabelStrike.configure(activebackground="#f9f9f9")
        self.LabelStrike.configure(activeforeground="black")
        self.LabelStrike.configure(anchor='w')
        self.LabelStrike.configure(background="#d9d9d9")
        self.LabelStrike.configure(disabledforeground="#a3a3a3")
        self.LabelStrike.configure(foreground="#000000")
        self.LabelStrike.configure(highlightbackground="#d9d9d9")
        self.LabelStrike.configure(highlightcolor="black")
        self.LabelStrike.configure(text='''Strike (float or empty)''')

        self.LabelDip = tk.Label(self.MainInputCatalog)
        self.LabelDip.place(relx=0.681, rely=0.235, height=23, width=210)
        self.LabelDip.configure(activebackground="#f9f9f9")
        self.LabelDip.configure(activeforeground="black")
        self.LabelDip.configure(anchor='w')
        self.LabelDip.configure(background="#d9d9d9")
        self.LabelDip.configure(disabledforeground="#a3a3a3")
        self.LabelDip.configure(foreground="#000000")
        self.LabelDip.configure(highlightbackground="#d9d9d9")
        self.LabelDip.configure(highlightcolor="black")
        self.LabelDip.configure(text='''Dip (float or empty)''')

        self.LabelRake = tk.Label(self.MainInputCatalog)
        self.LabelRake.place(relx=0.681, rely=0.294, height=23, width=210)
        self.LabelRake.configure(activebackground="#f9f9f9")
        self.LabelRake.configure(activeforeground="black")
        self.LabelRake.configure(anchor='w')
        self.LabelRake.configure(background="#d9d9d9")
        self.LabelRake.configure(disabledforeground="#a3a3a3")
        self.LabelRake.configure(foreground="#000000")
        self.LabelRake.configure(highlightbackground="#d9d9d9")
        self.LabelRake.configure(highlightcolor="black")
        self.LabelRake.configure(text='''Rake (float or empty)''')

        self.EntryMag = tk.Entry(self.MainInputCatalog)
        self.EntryMag.place(relx=0.327, rely=0.116, height=25, relwidth=0.157)
        self.EntryMag.configure(background="white")
        self.EntryMag.configure(disabledforeground="#a3a3a3")
        self.EntryMag.configure(font="TkFixedFont")
        self.EntryMag.configure(foreground="#000000")
        self.EntryMag.configure(highlightbackground="#d9d9d9")
        self.EntryMag.configure(highlightcolor="black")
        self.EntryMag.configure(insertbackground="black")
        self.EntryMag.configure(selectbackground="blue")
        self.EntryMag.configure(selectforeground="white")

        self.EntryLong = tk.Entry(self.MainInputCatalog)
        self.EntryLong.place(relx=0.327, rely=0.175, height=25, relwidth=0.157)
        self.EntryLong.configure(background="white")
        self.EntryLong.configure(disabledforeground="#a3a3a3")
        self.EntryLong.configure(font="TkFixedFont")
        self.EntryLong.configure(foreground="#000000")
        self.EntryLong.configure(highlightbackground="#d9d9d9")
        self.EntryLong.configure(highlightcolor="black")
        self.EntryLong.configure(insertbackground="black")
        self.EntryLong.configure(selectbackground="blue")
        self.EntryLong.configure(selectforeground="white")

        self.EntryLat = tk.Entry(self.MainInputCatalog)
        self.EntryLat.place(relx=0.327, rely=0.235, height=25, relwidth=0.157)
        self.EntryLat.configure(background="white")
        self.EntryLat.configure(disabledforeground="#a3a3a3")
        self.EntryLat.configure(font="TkFixedFont")
        self.EntryLat.configure(foreground="#000000")
        self.EntryLat.configure(highlightbackground="#d9d9d9")
        self.EntryLat.configure(highlightcolor="black")
        self.EntryLat.configure(insertbackground="black")
        self.EntryLat.configure(selectbackground="blue")
        self.EntryLat.configure(selectforeground="white")

        self.EntryDep = tk.Entry(self.MainInputCatalog)
        self.EntryDep.place(relx=0.327, rely=0.294, height=25, relwidth=0.157)
        self.EntryDep.configure(background="white")
        self.EntryDep.configure(disabledforeground="#a3a3a3")
        self.EntryDep.configure(font="TkFixedFont")
        self.EntryDep.configure(foreground="#000000")
        self.EntryDep.configure(highlightbackground="#d9d9d9")
        self.EntryDep.configure(highlightcolor="black")
        self.EntryDep.configure(insertbackground="black")
        self.EntryDep.configure(selectbackground="blue")
        self.EntryDep.configure(selectforeground="white")

        self.EntryDT = tk.Entry(self.MainInputCatalog)
        self.EntryDT.place(relx=0.51, rely=0.116, height=26, relwidth=0.157)
        self.EntryDT.configure(background="white")
        self.EntryDT.configure(disabledforeground="#a3a3a3")
        self.EntryDT.configure(font="TkFixedFont")
        self.EntryDT.configure(foreground="#000000")
        self.EntryDT.configure(highlightbackground="#d9d9d9")
        self.EntryDT.configure(highlightcolor="black")
        self.EntryDT.configure(insertbackground="black")
        self.EntryDT.configure(selectbackground="blue")
        self.EntryDT.configure(selectforeground="white")

        self.EntryStrik = tk.Entry(self.MainInputCatalog)
        self.EntryStrik.place(relx=0.51, rely=0.175, height=25, relwidth=0.157)
        self.EntryStrik.configure(background="white")
        self.EntryStrik.configure(disabledforeground="#a3a3a3")
        self.EntryStrik.configure(font="TkFixedFont")
        self.EntryStrik.configure(foreground="#000000")
        self.EntryStrik.configure(highlightbackground="#d9d9d9")
        self.EntryStrik.configure(highlightcolor="black")
        self.EntryStrik.configure(insertbackground="black")
        self.EntryStrik.configure(selectbackground="blue")
        self.EntryStrik.configure(selectforeground="white")

        self.EntryDi = tk.Entry(self.MainInputCatalog)
        self.EntryDi.place(relx=0.51, rely=0.235, height=25, relwidth=0.157)
        self.EntryDi.configure(background="white")
        self.EntryDi.configure(disabledforeground="#a3a3a3")
        self.EntryDi.configure(font="TkFixedFont")
        self.EntryDi.configure(foreground="#000000")
        self.EntryDi.configure(highlightbackground="#d9d9d9")
        self.EntryDi.configure(highlightcolor="black")
        self.EntryDi.configure(insertbackground="black")
        self.EntryDi.configure(selectbackground="blue")
        self.EntryDi.configure(selectforeground="white")

        self.EntryRak = tk.Entry(self.MainInputCatalog)
        self.EntryRak.place(relx=0.51, rely=0.294, height=25, relwidth=0.157)
        self.EntryRak.configure(background="white")
        self.EntryRak.configure(disabledforeground="#a3a3a3")
        self.EntryRak.configure(font="TkFixedFont")
        self.EntryRak.configure(foreground="#000000")
        self.EntryRak.configure(highlightbackground="#d9d9d9")
        self.EntryRak.configure(highlightcolor="black")
        self.EntryRak.configure(insertbackground="black")
        self.EntryRak.configure(selectbackground="blue")
        self.EntryRak.configure(selectforeground="white")

        self.style.configure('Treeview',  font="TkDefaultFont")
        self.ScrolledtreeviewCatalog = ScrolledTreeView(self.MainInputCatalog)
        self.ScrolledtreeviewCatalog.place(relx=0.013, rely=0.457, relheight=0.3
                , relwidth=0.969)
        self.ScrolledtreeviewCatalog.configure(columns="Col1 Col2 Col3 Col4 Col5 Col6 Col7 Col8")
        # build_treeview_support starting.
        self.ScrolledtreeviewCatalog.heading("#0",text="id")
        self.ScrolledtreeviewCatalog.heading("#0",anchor="center")
        self.ScrolledtreeviewCatalog.column("#0",width="24")
        self.ScrolledtreeviewCatalog.column("#0",minwidth="20")
        self.ScrolledtreeviewCatalog.column("#0",stretch="1")
        self.ScrolledtreeviewCatalog.column("#0",anchor="w")
        self.ScrolledtreeviewCatalog.heading("Col1",text="mag")
        self.ScrolledtreeviewCatalog.heading("Col1",anchor="center")
        self.ScrolledtreeviewCatalog.column("Col1",width="88")
        self.ScrolledtreeviewCatalog.column("Col1",minwidth="20")
        self.ScrolledtreeviewCatalog.column("Col1",stretch="1")
        self.ScrolledtreeviewCatalog.column("Col1",anchor="w")
        self.ScrolledtreeviewCatalog.heading("Col2",text="lon")
        self.ScrolledtreeviewCatalog.heading("Col2",anchor="center")
        self.ScrolledtreeviewCatalog.column("Col2",width="88")
        self.ScrolledtreeviewCatalog.column("Col2",minwidth="20")
        self.ScrolledtreeviewCatalog.column("Col2",stretch="1")
        self.ScrolledtreeviewCatalog.column("Col2",anchor="w")
        self.ScrolledtreeviewCatalog.heading("Col3",text="lat")
        self.ScrolledtreeviewCatalog.heading("Col3",anchor="center")
        self.ScrolledtreeviewCatalog.column("Col3",width="88")
        self.ScrolledtreeviewCatalog.column("Col3",minwidth="20")
        self.ScrolledtreeviewCatalog.column("Col3",stretch="1")
        self.ScrolledtreeviewCatalog.column("Col3",anchor="w")
        self.ScrolledtreeviewCatalog.heading("Col4",text="dep")
        self.ScrolledtreeviewCatalog.heading("Col4",anchor="center")
        self.ScrolledtreeviewCatalog.column("Col4",width="88")
        self.ScrolledtreeviewCatalog.column("Col4",minwidth="20")
        self.ScrolledtreeviewCatalog.column("Col4",stretch="1")
        self.ScrolledtreeviewCatalog.column("Col4",anchor="w")
        self.ScrolledtreeviewCatalog.heading("Col5",text="datetime")
        self.ScrolledtreeviewCatalog.heading("Col5",anchor="center")
        self.ScrolledtreeviewCatalog.column("Col5",width="89")
        self.ScrolledtreeviewCatalog.column("Col5",minwidth="20")
        self.ScrolledtreeviewCatalog.column("Col5",stretch="1")
        self.ScrolledtreeviewCatalog.column("Col5",anchor="w")
        self.ScrolledtreeviewCatalog.heading("Col6",text="strike")
        self.ScrolledtreeviewCatalog.heading("Col6",anchor="center")
        self.ScrolledtreeviewCatalog.column("Col6",width="89")
        self.ScrolledtreeviewCatalog.column("Col6",minwidth="20")
        self.ScrolledtreeviewCatalog.column("Col6",stretch="1")
        self.ScrolledtreeviewCatalog.column("Col6",anchor="w")
        self.ScrolledtreeviewCatalog.heading("Col7",text="dip")
        self.ScrolledtreeviewCatalog.heading("Col7",anchor="center")
        self.ScrolledtreeviewCatalog.column("Col7",width="88")
        self.ScrolledtreeviewCatalog.column("Col7",minwidth="20")
        self.ScrolledtreeviewCatalog.column("Col7",stretch="1")
        self.ScrolledtreeviewCatalog.column("Col7",anchor="w")
        self.ScrolledtreeviewCatalog.heading("Col8",text="rake")
        self.ScrolledtreeviewCatalog.heading("Col8",anchor="center")
        self.ScrolledtreeviewCatalog.column("Col8",width="79")
        self.ScrolledtreeviewCatalog.column("Col8",minwidth="20")
        self.ScrolledtreeviewCatalog.column("Col8",stretch="1")
        self.ScrolledtreeviewCatalog.column("Col8",anchor="w")

        self.ButtonPlot3D = tk.Button(self.MainInputCatalog)
        self.ButtonPlot3D.place(relx=0.746, rely=0.873, height=30, width=120)
        self.ButtonPlot3D.configure(activebackground="#ececec")
        self.ButtonPlot3D.configure(activeforeground="#000000")
        self.ButtonPlot3D.configure(background="#d9d9d9")
        self.ButtonPlot3D.configure(command=app_support.plot_3d_catalog)
        self.ButtonPlot3D.configure(disabledforeground="#a3a3a3")
        self.ButtonPlot3D.configure(foreground="#000000")
        self.ButtonPlot3D.configure(highlightbackground="#d9d9d9")
        self.ButtonPlot3D.configure(highlightcolor="black")
        self.ButtonPlot3D.configure(pady="0")
        self.ButtonPlot3D.configure(state='disabled')
        self.ButtonPlot3D.configure(text='''Plot 3D''')

        self.ButtonBuildCatalog = tk.Button(self.MainInputCatalog)
        self.ButtonBuildCatalog.place(relx=0.275, rely=0.793, height=30
                , width=167)
        self.ButtonBuildCatalog.configure(activebackground="#ececec")
        self.ButtonBuildCatalog.configure(activeforeground="#000000")
        self.ButtonBuildCatalog.configure(background="#d9d9d9")
        self.ButtonBuildCatalog.configure(command=app_support.build_catalog)
        self.ButtonBuildCatalog.configure(disabledforeground="#a3a3a3")
        self.ButtonBuildCatalog.configure(foreground="#000000")
        self.ButtonBuildCatalog.configure(highlightbackground="#d9d9d9")
        self.ButtonBuildCatalog.configure(highlightcolor="black")
        self.ButtonBuildCatalog.configure(pady="0")
        self.ButtonBuildCatalog.configure(state='disabled')
        self.ButtonBuildCatalog.configure(text='''Build catalog from  table''')

        self.CheckbuttonBasemap1 = tk.Checkbutton(self.MainInputCatalog)
        self.CheckbuttonBasemap1.place(relx=0.576, rely=0.793, relheight=0.061
                , relwidth=0.157)
        self.CheckbuttonBasemap1.configure(activebackground="#ececec")
        self.CheckbuttonBasemap1.configure(activeforeground="#000000")
        self.CheckbuttonBasemap1.configure(background="#d9d9d9")
        self.CheckbuttonBasemap1.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonBasemap1.configure(foreground="#000000")
        self.CheckbuttonBasemap1.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonBasemap1.configure(highlightcolor="black")
        self.CheckbuttonBasemap1.configure(justify='left')
        self.CheckbuttonBasemap1.configure(state='disabled')
        self.CheckbuttonBasemap1.configure(text='''Include Basemap''')
        self.CheckbuttonBasemap1.configure(variable=app_support.include_basemap_flag1)

        self.ButtonDeleteEventsCat = tk.Button(self.MainInputCatalog)
        self.ButtonDeleteEventsCat.place(relx=0.406, rely=0.372, height=30
                , width=140)
        self.ButtonDeleteEventsCat.configure(activebackground="#ececec")
        self.ButtonDeleteEventsCat.configure(activeforeground="#000000")
        self.ButtonDeleteEventsCat.configure(background="#d9d9d9")
        self.ButtonDeleteEventsCat.configure(command=app_support.catalog_delete_selected_events)
        self.ButtonDeleteEventsCat.configure(disabledforeground="#a3a3a3")
        self.ButtonDeleteEventsCat.configure(foreground="#000000")
        self.ButtonDeleteEventsCat.configure(highlightbackground="#d9d9d9")
        self.ButtonDeleteEventsCat.configure(highlightcolor="black")
        self.ButtonDeleteEventsCat.configure(pady="0")
        self.ButtonDeleteEventsCat.configure(text='''Delete selected events''')

        self.ButtonDelAllCat = tk.Button(self.MainInputCatalog)
        self.ButtonDelAllCat.place(relx=0.602, rely=0.372, height=30, width=140)
        self.ButtonDelAllCat.configure(activebackground="#ececec")
        self.ButtonDelAllCat.configure(activeforeground="#000000")
        self.ButtonDelAllCat.configure(background="#d9d9d9")
        self.ButtonDelAllCat.configure(command=app_support.catalog_delete_all_events)
        self.ButtonDelAllCat.configure(disabledforeground="#a3a3a3")
        self.ButtonDelAllCat.configure(foreground="#000000")
        self.ButtonDelAllCat.configure(highlightbackground="#d9d9d9")
        self.ButtonDelAllCat.configure(highlightcolor="black")
        self.ButtonDelAllCat.configure(pady="0")
        self.ButtonDelAllCat.configure(text='''Delete all events''')

        self.ButtonWebmap = tk.Button(self.MainInputCatalog)
        self.ButtonWebmap.place(relx=0.576, rely=0.873, height=30, width=120)
        self.ButtonWebmap.configure(activebackground="#ececec")
        self.ButtonWebmap.configure(activeforeground="#000000")
        self.ButtonWebmap.configure(background="#d9d9d9")
        self.ButtonWebmap.configure(command=app_support.plot_webmap_catalog)
        self.ButtonWebmap.configure(disabledforeground="#a3a3a3")
        self.ButtonWebmap.configure(foreground="#000000")
        self.ButtonWebmap.configure(highlightbackground="#d9d9d9")
        self.ButtonWebmap.configure(highlightcolor="black")
        self.ButtonWebmap.configure(pady="0")
        self.ButtonWebmap.configure(state='disabled')
        self.ButtonWebmap.configure(text='''Plot Webmap''')

        self.LabelMeshRuptures = tk.Label(self.MainInputCatalog)
        self.LabelMeshRuptures.place(relx=0.065, rely=0.873, height=29, width=49)

        self.LabelMeshRuptures.configure(activebackground="#f9f9f9")
        self.LabelMeshRuptures.configure(activeforeground="black")
        self.LabelMeshRuptures.configure(background="#d9d9d9")
        self.LabelMeshRuptures.configure(disabledforeground="#a3a3a3")
        self.LabelMeshRuptures.configure(foreground="#000000")
        self.LabelMeshRuptures.configure(highlightbackground="#d9d9d9")
        self.LabelMeshRuptures.configure(highlightcolor="black")
        self.LabelMeshRuptures.configure(state='disabled')
        self.LabelMeshRuptures.configure(text='''Meshsize''')

        self.EntryMeshRuptures = tk.Entry(self.MainInputCatalog)
        self.EntryMeshRuptures.place(relx=0.157, rely=0.873, height=30
                , relwidth=0.065)
        self.EntryMeshRuptures.configure(background="white")
        self.EntryMeshRuptures.configure(disabledforeground="#a3a3a3")
        self.EntryMeshRuptures.configure(font="TkFixedFont")
        self.EntryMeshRuptures.configure(foreground="#000000")
        self.EntryMeshRuptures.configure(highlightbackground="#d9d9d9")
        self.EntryMeshRuptures.configure(highlightcolor="black")
        self.EntryMeshRuptures.configure(insertbackground="black")
        self.EntryMeshRuptures.configure(selectbackground="blue")
        self.EntryMeshRuptures.configure(selectforeground="white")
        self.EntryMeshRuptures.configure(state='disabled')
        self.EntryMeshRuptures.configure(textvariable=app_support.entry_mesh_spacing)

        self.LabelCLon = tk.Label(self.MainExposure)
        self.LabelCLon.place(relx=0.01, rely=0.03, height=23, width=206)
        self.LabelCLon.configure(activebackground="#f9f9f9")
        self.LabelCLon.configure(activeforeground="black")
        self.LabelCLon.configure(anchor='e')
        self.LabelCLon.configure(background="#d9d9d9")
        self.LabelCLon.configure(disabledforeground="#a3a3a3")
        self.LabelCLon.configure(foreground="#000000")
        self.LabelCLon.configure(highlightbackground="#d9d9d9")
        self.LabelCLon.configure(highlightcolor="black")
        self.LabelCLon.configure(text='''Center Longitude (float)''')

        self.LabelCLat = tk.Label(self.MainExposure)
        self.LabelCLat.place(relx=0.01, rely=0.093, height=23, width=206)
        self.LabelCLat.configure(activebackground="#f9f9f9")
        self.LabelCLat.configure(activeforeground="black")
        self.LabelCLat.configure(anchor='e')
        self.LabelCLat.configure(background="#d9d9d9")
        self.LabelCLat.configure(disabledforeground="#a3a3a3")
        self.LabelCLat.configure(foreground="#000000")
        self.LabelCLat.configure(highlightbackground="#d9d9d9")
        self.LabelCLat.configure(highlightcolor="black")
        self.LabelCLat.configure(text='''Center Latitude (float)''')

        self.LabelWLon = tk.Label(self.MainExposure)
        self.LabelWLon.place(relx=0.01, rely=0.15, height=25, width=206)
        self.LabelWLon.configure(activebackground="#f9f9f9")
        self.LabelWLon.configure(activeforeground="black")
        self.LabelWLon.configure(anchor='e')
        self.LabelWLon.configure(background="#d9d9d9")
        self.LabelWLon.configure(disabledforeground="#a3a3a3")
        self.LabelWLon.configure(foreground="#000000")
        self.LabelWLon.configure(highlightbackground="#d9d9d9")
        self.LabelWLon.configure(highlightcolor="black")
        self.LabelWLon.configure(text='''Width Longitude (float)''')

        self.LabelHLat = tk.Label(self.MainExposure)
        self.LabelHLat.place(relx=0.01, rely=0.209, height=23, width=206)
        self.LabelHLat.configure(activebackground="#f9f9f9")
        self.LabelHLat.configure(activeforeground="black")
        self.LabelHLat.configure(anchor='e')
        self.LabelHLat.configure(background="#d9d9d9")
        self.LabelHLat.configure(disabledforeground="#a3a3a3")
        self.LabelHLat.configure(foreground="#000000")
        self.LabelHLat.configure(highlightbackground="#d9d9d9")
        self.LabelHLat.configure(highlightcolor="black")
        self.LabelHLat.configure(text='''Height Latitude (float)''')

        self.LabelBinLon = tk.Label(self.MainExposure)
        self.LabelBinLon.place(relx=0.01, rely=0.271, height=24, width=206)
        self.LabelBinLon.configure(activebackground="#f9f9f9")
        self.LabelBinLon.configure(activeforeground="black")
        self.LabelBinLon.configure(anchor='e')
        self.LabelBinLon.configure(background="#d9d9d9")
        self.LabelBinLon.configure(disabledforeground="#a3a3a3")
        self.LabelBinLon.configure(foreground="#000000")
        self.LabelBinLon.configure(highlightbackground="#d9d9d9")
        self.LabelBinLon.configure(highlightcolor="black")
        self.LabelBinLon.configure(text='''Bin Longitude (float)''')

        self.LabelBinLat = tk.Label(self.MainExposure)
        self.LabelBinLat.place(relx=0.01, rely=0.332, height=23, width=206)
        self.LabelBinLat.configure(activebackground="#f9f9f9")
        self.LabelBinLat.configure(activeforeground="black")
        self.LabelBinLat.configure(anchor='e')
        self.LabelBinLat.configure(background="#d9d9d9")
        self.LabelBinLat.configure(disabledforeground="#a3a3a3")
        self.LabelBinLat.configure(foreground="#000000")
        self.LabelBinLat.configure(highlightbackground="#d9d9d9")
        self.LabelBinLat.configure(highlightcolor="black")
        self.LabelBinLat.configure(text='''Bin Latitude (float)''')

        self.EntryCLon = tk.Entry(self.MainExposure)
        self.EntryCLon.place(relx=0.3, rely=0.03, height=24, relwidth=0.11)
        self.EntryCLon.configure(background="white")
        self.EntryCLon.configure(disabledforeground="#a3a3a3")
        self.EntryCLon.configure(font="TkFixedFont")
        self.EntryCLon.configure(foreground="#000000")
        self.EntryCLon.configure(highlightbackground="#d9d9d9")
        self.EntryCLon.configure(highlightcolor="black")
        self.EntryCLon.configure(insertbackground="black")
        self.EntryCLon.configure(selectbackground="blue")
        self.EntryCLon.configure(selectforeground="white")

        self.EntryCLat = tk.Entry(self.MainExposure)
        self.EntryCLat.place(relx=0.3, rely=0.091, height=24, relwidth=0.11)
        self.EntryCLat.configure(background="white")
        self.EntryCLat.configure(disabledforeground="#a3a3a3")
        self.EntryCLat.configure(font="TkFixedFont")
        self.EntryCLat.configure(foreground="#000000")
        self.EntryCLat.configure(highlightbackground="#d9d9d9")
        self.EntryCLat.configure(highlightcolor="black")
        self.EntryCLat.configure(insertbackground="black")
        self.EntryCLat.configure(selectbackground="blue")
        self.EntryCLat.configure(selectforeground="white")

        self.EntryWLon = tk.Entry(self.MainExposure)
        self.EntryWLon.place(relx=0.3, rely=0.15, height=24, relwidth=0.11)
        self.EntryWLon.configure(background="white")
        self.EntryWLon.configure(disabledforeground="#a3a3a3")
        self.EntryWLon.configure(font="TkFixedFont")
        self.EntryWLon.configure(foreground="#000000")
        self.EntryWLon.configure(highlightbackground="#d9d9d9")
        self.EntryWLon.configure(highlightcolor="black")
        self.EntryWLon.configure(insertbackground="black")
        self.EntryWLon.configure(selectbackground="blue")
        self.EntryWLon.configure(selectforeground="white")

        self.EntryHLat = tk.Entry(self.MainExposure)
        self.EntryHLat.place(relx=0.3, rely=0.209, height=24, relwidth=0.11)
        self.EntryHLat.configure(background="white")
        self.EntryHLat.configure(disabledforeground="#a3a3a3")
        self.EntryHLat.configure(font="TkFixedFont")
        self.EntryHLat.configure(foreground="#000000")
        self.EntryHLat.configure(highlightbackground="#d9d9d9")
        self.EntryHLat.configure(highlightcolor="black")
        self.EntryHLat.configure(insertbackground="black")
        self.EntryHLat.configure(selectbackground="blue")
        self.EntryHLat.configure(selectforeground="white")

        self.EntryBinLon = tk.Entry(self.MainExposure)
        self.EntryBinLon.place(relx=0.3, rely=0.271, height=23, relwidth=0.11)
        self.EntryBinLon.configure(background="white")
        self.EntryBinLon.configure(disabledforeground="#a3a3a3")
        self.EntryBinLon.configure(font="TkFixedFont")
        self.EntryBinLon.configure(foreground="#000000")
        self.EntryBinLon.configure(highlightbackground="#d9d9d9")
        self.EntryBinLon.configure(highlightcolor="black")
        self.EntryBinLon.configure(insertbackground="black")
        self.EntryBinLon.configure(selectbackground="blue")
        self.EntryBinLon.configure(selectforeground="white")

        self.EntryBinLat = tk.Entry(self.MainExposure)
        self.EntryBinLat.place(relx=0.3, rely=0.33, height=24, relwidth=0.11)
        self.EntryBinLat.configure(background="white")
        self.EntryBinLat.configure(disabledforeground="#a3a3a3")
        self.EntryBinLat.configure(font="TkFixedFont")
        self.EntryBinLat.configure(foreground="#000000")
        self.EntryBinLat.configure(highlightbackground="#d9d9d9")
        self.EntryBinLat.configure(highlightcolor="black")
        self.EntryBinLat.configure(insertbackground="black")
        self.EntryBinLat.configure(selectbackground="blue")
        self.EntryBinLat.configure(selectforeground="white")

        self.TComboboxGeometry = ttk.Combobox(self.MainExposure)
        self.TComboboxGeometry.place(relx=0.3, rely=0.391, relheight=0.051
                , relwidth=0.11)
        self.value_list = ['Single Point','Rectangle','Circle',]
        self.TComboboxGeometry.configure(values=self.value_list)
        self.TComboboxGeometry.configure(textvariable=app_support.combobox_geometry_exp)
        self.TComboboxGeometry.configure(takefocus="")

        self.LabelGeometry = tk.Label(self.MainExposure)
        self.LabelGeometry.place(relx=0.01, rely=0.391, height=24, width=206)
        self.LabelGeometry.configure(activebackground="#f9f9f9")
        self.LabelGeometry.configure(activeforeground="black")
        self.LabelGeometry.configure(anchor='e')
        self.LabelGeometry.configure(background="#d9d9d9")
        self.LabelGeometry.configure(disabledforeground="#a3a3a3")
        self.LabelGeometry.configure(foreground="#000000")
        self.LabelGeometry.configure(highlightbackground="#d9d9d9")
        self.LabelGeometry.configure(highlightcolor="black")
        self.LabelGeometry.configure(text='''Geometry''')

        self.ScrolledtreeviewTax = ScrolledTreeView(self.MainExposure)
        self.ScrolledtreeviewTax.place(relx=0.51, rely=0.264, relheight=0.224
                , relwidth=0.419)
        self.ScrolledtreeviewTax.configure(columns="Col1 Col2")
        # build_treeview_support starting.
        self.ScrolledtreeviewTax.heading("#0",text="id")
        self.ScrolledtreeviewTax.heading("#0",anchor="center")
        self.ScrolledtreeviewTax.column("#0",width="31")
        self.ScrolledtreeviewTax.column("#0",minwidth="20")
        self.ScrolledtreeviewTax.column("#0",stretch="1")
        self.ScrolledtreeviewTax.column("#0",anchor="w")
        self.ScrolledtreeviewTax.heading("Col1",text="taxonomy_id")
        self.ScrolledtreeviewTax.heading("Col1",anchor="center")
        self.ScrolledtreeviewTax.column("Col1",width="135")
        self.ScrolledtreeviewTax.column("Col1",minwidth="20")
        self.ScrolledtreeviewTax.column("Col1",stretch="1")
        self.ScrolledtreeviewTax.column("Col1",anchor="w")
        self.ScrolledtreeviewTax.heading("Col2",text="taxonomy_perc")
        self.ScrolledtreeviewTax.heading("Col2",anchor="center")
        self.ScrolledtreeviewTax.column("Col2",width="135")
        self.ScrolledtreeviewTax.column("Col2",minwidth="20")
        self.ScrolledtreeviewTax.column("Col2",stretch="1")
        self.ScrolledtreeviewTax.column("Col2",anchor="w")

        self.EntryTaxId = tk.Entry(self.MainExposure)
        self.EntryTaxId.place(relx=0.72, rely=0.04, height=24, relwidth=0.11)
        self.EntryTaxId.configure(background="white")
        self.EntryTaxId.configure(disabledforeground="#a3a3a3")
        self.EntryTaxId.configure(font="TkFixedFont")
        self.EntryTaxId.configure(foreground="#000000")
        self.EntryTaxId.configure(highlightbackground="#d9d9d9")
        self.EntryTaxId.configure(highlightcolor="black")
        self.EntryTaxId.configure(insertbackground="black")
        self.EntryTaxId.configure(selectbackground="blue")
        self.EntryTaxId.configure(selectforeground="white")

        self.EntryTaxPerc = tk.Entry(self.MainExposure)
        self.EntryTaxPerc.place(relx=0.72, rely=0.101, height=24, relwidth=0.11)
        self.EntryTaxPerc.configure(background="white")
        self.EntryTaxPerc.configure(disabledforeground="#a3a3a3")
        self.EntryTaxPerc.configure(font="TkFixedFont")
        self.EntryTaxPerc.configure(foreground="#000000")
        self.EntryTaxPerc.configure(highlightbackground="#d9d9d9")
        self.EntryTaxPerc.configure(highlightcolor="black")
        self.EntryTaxPerc.configure(insertbackground="black")
        self.EntryTaxPerc.configure(selectbackground="blue")
        self.EntryTaxPerc.configure(selectforeground="white")

        self.LabelTaxId = tk.Label(self.MainExposure)
        self.LabelTaxId.place(relx=0.51, rely=0.04, height=25, width=152)
        self.LabelTaxId.configure(activebackground="#f9f9f9")
        self.LabelTaxId.configure(activeforeground="black")
        self.LabelTaxId.configure(anchor='e')
        self.LabelTaxId.configure(background="#d9d9d9")
        self.LabelTaxId.configure(disabledforeground="#a3a3a3")
        self.LabelTaxId.configure(foreground="#000000")
        self.LabelTaxId.configure(highlightbackground="#d9d9d9")
        self.LabelTaxId.configure(highlightcolor="black")
        self.LabelTaxId.configure(text='''Taxonomy id (string)''')

        self.LabelTaxPerc = tk.Label(self.MainExposure)
        self.LabelTaxPerc.place(relx=0.51, rely=0.101, height=24, width=152)
        self.LabelTaxPerc.configure(activebackground="#f9f9f9")
        self.LabelTaxPerc.configure(activeforeground="black")
        self.LabelTaxPerc.configure(anchor='e')
        self.LabelTaxPerc.configure(background="#d9d9d9")
        self.LabelTaxPerc.configure(disabledforeground="#a3a3a3")
        self.LabelTaxPerc.configure(foreground="#000000")
        self.LabelTaxPerc.configure(highlightbackground="#d9d9d9")
        self.LabelTaxPerc.configure(highlightcolor="black")
        self.LabelTaxPerc.configure(text='''Taxonomy % (float)''')

        self.ButtonAddTax = tk.Button(self.MainExposure)
        self.ButtonAddTax.place(relx=0.51, rely=0.184, height=24, width=100)
        self.ButtonAddTax.configure(activebackground="#ececec")
        self.ButtonAddTax.configure(activeforeground="#000000")
        self.ButtonAddTax.configure(background="#d9d9d9")
        self.ButtonAddTax.configure(command=app_support.add_taxonomy)
        self.ButtonAddTax.configure(disabledforeground="#a3a3a3")
        self.ButtonAddTax.configure(foreground="#000000")
        self.ButtonAddTax.configure(highlightbackground="#d9d9d9")
        self.ButtonAddTax.configure(highlightcolor="black")
        self.ButtonAddTax.configure(pady="0")
        self.ButtonAddTax.configure(text='''Add taxonomy''')

        self.LabelNum = tk.Label(self.MainExposure)
        self.LabelNum.place(relx=0.01, rely=0.448, height=25, width=206)
        self.LabelNum.configure(activebackground="#f9f9f9")
        self.LabelNum.configure(activeforeground="black")
        self.LabelNum.configure(anchor='e')
        self.LabelNum.configure(background="#d9d9d9")
        self.LabelNum.configure(disabledforeground="#a3a3a3")
        self.LabelNum.configure(foreground="#000000")
        self.LabelNum.configure(highlightbackground="#d9d9d9")
        self.LabelNum.configure(highlightcolor="black")
        self.LabelNum.configure(text='''Number assets (float)''')

        self.EntryNum = tk.Entry(self.MainExposure)
        self.EntryNum.place(relx=0.3, rely=0.448, height=24, relwidth=0.11)
        self.EntryNum.configure(background="white")
        self.EntryNum.configure(disabledforeground="#a3a3a3")
        self.EntryNum.configure(font="TkFixedFont")
        self.EntryNum.configure(foreground="#000000")
        self.EntryNum.configure(highlightbackground="#d9d9d9")
        self.EntryNum.configure(highlightcolor="black")
        self.EntryNum.configure(insertbackground="black")
        self.EntryNum.configure(selectbackground="blue")
        self.EntryNum.configure(selectforeground="white")
        self.EntryNum.configure(textvariable=app_support.exp_num_assets)

        self.ButtonBuildExpInp = tk.Button(self.MainExposure)
        self.ButtonBuildExpInp.place(relx=0.17, rely=0.647, height=26, width=196)

        self.ButtonBuildExpInp.configure(activebackground="#ececec")
        self.ButtonBuildExpInp.configure(activeforeground="#000000")
        self.ButtonBuildExpInp.configure(background="#d9d9d9")
        self.ButtonBuildExpInp.configure(command=app_support.build_exposure)
        self.ButtonBuildExpInp.configure(disabledforeground="#a3a3a3")
        self.ButtonBuildExpInp.configure(foreground="#000000")
        self.ButtonBuildExpInp.configure(highlightbackground="#d9d9d9")
        self.ButtonBuildExpInp.configure(highlightcolor="black")
        self.ButtonBuildExpInp.configure(pady="0")
        self.ButtonBuildExpInp.configure(text='''Build exposure from inputs''')

        self.ButtonBuildExpOQ = tk.Button(self.MainExposure)
        self.ButtonBuildExpOQ.place(relx=0.17, rely=0.723, height=24, width=197)
        self.ButtonBuildExpOQ.configure(activebackground="#ececec")
        self.ButtonBuildExpOQ.configure(activeforeground="#000000")
        self.ButtonBuildExpOQ.configure(background="#d9d9d9")
        self.ButtonBuildExpOQ.configure(command=app_support.build_exposure_from_oq)
        self.ButtonBuildExpOQ.configure(disabledforeground="#a3a3a3")
        self.ButtonBuildExpOQ.configure(foreground="#000000")
        self.ButtonBuildExpOQ.configure(highlightbackground="#d9d9d9")
        self.ButtonBuildExpOQ.configure(highlightcolor="black")
        self.ButtonBuildExpOQ.configure(pady="0")
        self.ButtonBuildExpOQ.configure(text='''Build exposure from OQ xml file''')

        self.ButtonPlot2dExpOnly = tk.Button(self.MainExposure)
        self.ButtonPlot2dExpOnly.place(relx=0.589, rely=0.666, height=23
                , width=157)
        self.ButtonPlot2dExpOnly.configure(activebackground="#ececec")
        self.ButtonPlot2dExpOnly.configure(activeforeground="#000000")
        self.ButtonPlot2dExpOnly.configure(background="#d9d9d9")
        self.ButtonPlot2dExpOnly.configure(command=app_support.plot_2d_exposure)
        self.ButtonPlot2dExpOnly.configure(disabledforeground="#a3a3a3")
        self.ButtonPlot2dExpOnly.configure(foreground="#000000")
        self.ButtonPlot2dExpOnly.configure(highlightbackground="#d9d9d9")
        self.ButtonPlot2dExpOnly.configure(highlightcolor="black")
        self.ButtonPlot2dExpOnly.configure(pady="0")
        self.ButtonPlot2dExpOnly.configure(state='disabled')
        self.ButtonPlot2dExpOnly.configure(text='''Plot 2D exposure only''')

        self.ButtonPlot3dExpOnly = tk.Button(self.MainExposure)
        self.ButtonPlot3dExpOnly.place(relx=0.589, rely=0.744, height=24
                , width=157)
        self.ButtonPlot3dExpOnly.configure(activebackground="#ececec")
        self.ButtonPlot3dExpOnly.configure(activeforeground="#000000")
        self.ButtonPlot3dExpOnly.configure(background="#d9d9d9")
        self.ButtonPlot3dExpOnly.configure(command=app_support.plot_3d_exposure)
        self.ButtonPlot3dExpOnly.configure(disabledforeground="#a3a3a3")
        self.ButtonPlot3dExpOnly.configure(foreground="#000000")
        self.ButtonPlot3dExpOnly.configure(highlightbackground="#d9d9d9")
        self.ButtonPlot3dExpOnly.configure(highlightcolor="black")
        self.ButtonPlot3dExpOnly.configure(pady="0")
        self.ButtonPlot3dExpOnly.configure(state='disabled')
        self.ButtonPlot3dExpOnly.configure(text='''Plot 3D exposure only''')

        self.ButtonPlot2dWithCat = tk.Button(self.MainExposure)
        self.ButtonPlot2dWithCat.place(relx=0.589, rely=0.822, height=23
                , width=157)
        self.ButtonPlot2dWithCat.configure(activebackground="#ececec")
        self.ButtonPlot2dWithCat.configure(activeforeground="#000000")
        self.ButtonPlot2dWithCat.configure(background="#d9d9d9")
        self.ButtonPlot2dWithCat.configure(command=app_support.plot_2d_exposure_catalog)
        self.ButtonPlot2dWithCat.configure(disabledforeground="#a3a3a3")
        self.ButtonPlot2dWithCat.configure(foreground="#000000")
        self.ButtonPlot2dWithCat.configure(highlightbackground="#d9d9d9")
        self.ButtonPlot2dWithCat.configure(highlightcolor="black")
        self.ButtonPlot2dWithCat.configure(pady="0")
        self.ButtonPlot2dWithCat.configure(state='disabled')
        self.ButtonPlot2dWithCat.configure(text='''Plot 2D with catalog''')

        self.ButtonPlot3dWithCat = tk.Button(self.MainExposure)
        self.ButtonPlot3dWithCat.place(relx=0.589, rely=0.901, height=26
                , width=157)
        self.ButtonPlot3dWithCat.configure(activebackground="#ececec")
        self.ButtonPlot3dWithCat.configure(activeforeground="#000000")
        self.ButtonPlot3dWithCat.configure(background="#d9d9d9")
        self.ButtonPlot3dWithCat.configure(command=app_support.plot_3d_exposure_catalog)
        self.ButtonPlot3dWithCat.configure(disabledforeground="#a3a3a3")
        self.ButtonPlot3dWithCat.configure(foreground="#000000")
        self.ButtonPlot3dWithCat.configure(highlightbackground="#d9d9d9")
        self.ButtonPlot3dWithCat.configure(highlightcolor="black")
        self.ButtonPlot3dWithCat.configure(pady="0")
        self.ButtonPlot3dWithCat.configure(state='disabled')
        self.ButtonPlot3dWithCat.configure(text='''Plot 3D with catalog''')

        self.CheckbuttonBasemap2 = tk.Checkbutton(self.MainExposure)
        self.CheckbuttonBasemap2.place(relx=0.589, rely=0.588, relheight=0.049
                , relwidth=0.208)
        self.CheckbuttonBasemap2.configure(activebackground="#ececec")
        self.CheckbuttonBasemap2.configure(activeforeground="#000000")
        self.CheckbuttonBasemap2.configure(background="#d9d9d9")
        self.CheckbuttonBasemap2.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonBasemap2.configure(foreground="#000000")
        self.CheckbuttonBasemap2.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonBasemap2.configure(highlightcolor="black")
        self.CheckbuttonBasemap2.configure(justify='left')
        self.CheckbuttonBasemap2.configure(state='disabled')
        self.CheckbuttonBasemap2.configure(text='''Include basemap''')
        self.CheckbuttonBasemap2.configure(variable=app_support.include_basemap_flag2)

        self.ButtonDelAllTax = tk.Button(self.MainExposure)
        self.ButtonDelAllTax.place(relx=0.798, rely=0.184, height=24, width=100)
        self.ButtonDelAllTax.configure(activebackground="#ececec")
        self.ButtonDelAllTax.configure(activeforeground="#000000")
        self.ButtonDelAllTax.configure(background="#d9d9d9")
        self.ButtonDelAllTax.configure(command=app_support.delete_all_taxonomy)
        self.ButtonDelAllTax.configure(disabledforeground="#a3a3a3")
        self.ButtonDelAllTax.configure(foreground="#000000")
        self.ButtonDelAllTax.configure(highlightbackground="#d9d9d9")
        self.ButtonDelAllTax.configure(highlightcolor="black")
        self.ButtonDelAllTax.configure(pady="0")
        self.ButtonDelAllTax.configure(text='''Delete all''')

        self.ButtonDelSelTax = tk.Button(self.MainExposure)
        self.ButtonDelSelTax.place(relx=0.654, rely=0.184, height=24, width=100)
        self.ButtonDelSelTax.configure(activebackground="#ececec")
        self.ButtonDelSelTax.configure(activeforeground="#000000")
        self.ButtonDelSelTax.configure(background="#d9d9d9")
        self.ButtonDelSelTax.configure(command=app_support.delete_selected_taxonomy)
        self.ButtonDelSelTax.configure(disabledforeground="#a3a3a3")
        self.ButtonDelSelTax.configure(foreground="#000000")
        self.ButtonDelSelTax.configure(highlightbackground="#d9d9d9")
        self.ButtonDelSelTax.configure(highlightcolor="black")
        self.ButtonDelSelTax.configure(pady="0")
        self.ButtonDelSelTax.configure(text='''Delete selected''')

        self.Labelframe1 = tk.LabelFrame(self.MainETAS)
        self.Labelframe1.place(relx=0.026, rely=0.019, relheight=0.672
                , relwidth=0.314)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''ETAS parameters (all floats)''')
        self.Labelframe1.configure(background="#d9d9d9")
        self.Labelframe1.configure(highlightbackground="#d9d9d9")
        self.Labelframe1.configure(highlightcolor="black")

        self.Labelframe5 = tk.LabelFrame(self.Labelframe1)
        self.Labelframe5.place(relx=0.038, rely=0.057, relheight=0.242
                , relwidth=0.917, bordermode='ignore')
        self.Labelframe5.configure(relief='groove')
        self.Labelframe5.configure(foreground="black")
        self.Labelframe5.configure(text='''Productivity''')
        self.Labelframe5.configure(background="#d9d9d9")
        self.Labelframe5.configure(highlightbackground="#d9d9d9")
        self.Labelframe5.configure(highlightcolor="black")

        self.LabelA = tk.Label(self.Labelframe5)
        self.LabelA.place(relx=0.073, rely=0.286, height=17, width=39
                , bordermode='ignore')
        self.LabelA.configure(activebackground="#f9f9f9")
        self.LabelA.configure(activeforeground="black")
        self.LabelA.configure(background="#d9d9d9")
        self.LabelA.configure(disabledforeground="#a3a3a3")
        self.LabelA.configure(foreground="#000000")
        self.LabelA.configure(highlightbackground="#d9d9d9")
        self.LabelA.configure(highlightcolor="black")
        self.LabelA.configure(text='''A''')

        self.EntryA = tk.Entry(self.Labelframe5)
        self.EntryA.place(relx=0.323, rely=0.286, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryA.configure(background="white")
        self.EntryA.configure(disabledforeground="#a3a3a3")
        self.EntryA.configure(font="TkFixedFont")
        self.EntryA.configure(foreground="#000000")
        self.EntryA.configure(highlightbackground="#d9d9d9")
        self.EntryA.configure(highlightcolor="black")
        self.EntryA.configure(insertbackground="black")
        self.EntryA.configure(selectbackground="blue")
        self.EntryA.configure(selectforeground="white")

        self.LabelAlpha = tk.Label(self.Labelframe5)
        self.LabelAlpha.place(relx=0.073, rely=0.571, height=17, width=39
                , bordermode='ignore')
        self.LabelAlpha.configure(activebackground="#f9f9f9")
        self.LabelAlpha.configure(activeforeground="black")
        self.LabelAlpha.configure(background="#d9d9d9")
        self.LabelAlpha.configure(disabledforeground="#a3a3a3")
        self.LabelAlpha.configure(foreground="#000000")
        self.LabelAlpha.configure(highlightbackground="#d9d9d9")
        self.LabelAlpha.configure(highlightcolor="black")
        self.LabelAlpha.configure(text='''alpha''')

        self.EntryAlpha = tk.Entry(self.Labelframe5)
        self.EntryAlpha.place(relx=0.323, rely=0.571, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryAlpha.configure(background="white")
        self.EntryAlpha.configure(disabledforeground="#a3a3a3")
        self.EntryAlpha.configure(font="TkFixedFont")
        self.EntryAlpha.configure(foreground="#000000")
        self.EntryAlpha.configure(highlightbackground="#d9d9d9")
        self.EntryAlpha.configure(highlightcolor="black")
        self.EntryAlpha.configure(insertbackground="black")
        self.EntryAlpha.configure(selectbackground="blue")
        self.EntryAlpha.configure(selectforeground="white")

        self.ButtonPlotProd = tk.Button(self.Labelframe5)
        self.ButtonPlotProd.place(relx=0.636, rely=0.377, height=30, width=60
                , bordermode='ignore')
        self.ButtonPlotProd.configure(activebackground="#ececec")
        self.ButtonPlotProd.configure(activeforeground="#000000")
        self.ButtonPlotProd.configure(background="#d9d9d9")
        self.ButtonPlotProd.configure(command=app_support.plot_productivity)
        self.ButtonPlotProd.configure(disabledforeground="#a3a3a3")
        self.ButtonPlotProd.configure(foreground="#000000")
        self.ButtonPlotProd.configure(highlightbackground="#d9d9d9")
        self.ButtonPlotProd.configure(highlightcolor="black")
        self.ButtonPlotProd.configure(pady="0")
        self.ButtonPlotProd.configure(text='''Plot''')

        self.Labelframe6 = tk.LabelFrame(self.Labelframe1)
        self.Labelframe6.place(relx=0.038, rely=0.324, relheight=0.302
                , relwidth=0.917, bordermode='ignore')
        self.Labelframe6.configure(relief='groove')
        self.Labelframe6.configure(foreground="black")
        self.Labelframe6.configure(text='''Time PDF''')
        self.Labelframe6.configure(background="#d9d9d9")
        self.Labelframe6.configure(highlightbackground="#d9d9d9")
        self.Labelframe6.configure(highlightcolor="black")

        self.LabelC = tk.Label(self.Labelframe6)
        self.LabelC.place(relx=0.073, rely=0.229, height=18, width=39
                , bordermode='ignore')
        self.LabelC.configure(activebackground="#f9f9f9")
        self.LabelC.configure(activeforeground="black")
        self.LabelC.configure(background="#d9d9d9")
        self.LabelC.configure(disabledforeground="#a3a3a3")
        self.LabelC.configure(foreground="#000000")
        self.LabelC.configure(highlightbackground="#d9d9d9")
        self.LabelC.configure(highlightcolor="black")
        self.LabelC.configure(text='''c''')

        self.LabelP = tk.Label(self.Labelframe6)
        self.LabelP.place(relx=0.073, rely=0.458, height=18, width=39
                , bordermode='ignore')
        self.LabelP.configure(activebackground="#f9f9f9")
        self.LabelP.configure(activeforeground="black")
        self.LabelP.configure(background="#d9d9d9")
        self.LabelP.configure(disabledforeground="#a3a3a3")
        self.LabelP.configure(foreground="#000000")
        self.LabelP.configure(highlightbackground="#d9d9d9")
        self.LabelP.configure(highlightcolor="black")
        self.LabelP.configure(text='''p''')

        self.EntryC = tk.Entry(self.Labelframe6)
        self.EntryC.place(relx=0.323, rely=0.229, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryC.configure(background="white")
        self.EntryC.configure(disabledforeground="#a3a3a3")
        self.EntryC.configure(font="TkFixedFont")
        self.EntryC.configure(foreground="#000000")
        self.EntryC.configure(highlightbackground="#d9d9d9")
        self.EntryC.configure(highlightcolor="black")
        self.EntryC.configure(insertbackground="black")
        self.EntryC.configure(selectbackground="blue")
        self.EntryC.configure(selectforeground="white")

        self.EntryP = tk.Entry(self.Labelframe6)
        self.EntryP.place(relx=0.323, rely=0.458, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryP.configure(background="white")
        self.EntryP.configure(disabledforeground="#a3a3a3")
        self.EntryP.configure(font="TkFixedFont")
        self.EntryP.configure(foreground="#000000")
        self.EntryP.configure(highlightbackground="#d9d9d9")
        self.EntryP.configure(highlightcolor="black")
        self.EntryP.configure(insertbackground="black")
        self.EntryP.configure(selectbackground="blue")
        self.EntryP.configure(selectforeground="white")

        self.ButtonPlotTimePdf = tk.Button(self.Labelframe6)
        self.ButtonPlotTimePdf.place(relx=0.636, rely=0.396, height=30, width=60
                , bordermode='ignore')
        self.ButtonPlotTimePdf.configure(activebackground="#ececec")
        self.ButtonPlotTimePdf.configure(activeforeground="#000000")
        self.ButtonPlotTimePdf.configure(background="#d9d9d9")
        self.ButtonPlotTimePdf.configure(command=app_support.plot_time_pdf)
        self.ButtonPlotTimePdf.configure(disabledforeground="#a3a3a3")
        self.ButtonPlotTimePdf.configure(foreground="#000000")
        self.ButtonPlotTimePdf.configure(highlightbackground="#d9d9d9")
        self.ButtonPlotTimePdf.configure(highlightcolor="black")
        self.ButtonPlotTimePdf.configure(pady="0")
        self.ButtonPlotTimePdf.configure(text='''Plot''')

        self.LabelTa = tk.Label(self.Labelframe6)
        self.LabelTa.place(relx=0.073, rely=0.688, height=18, width=39
                , bordermode='ignore')
        self.LabelTa.configure(activebackground="#f9f9f9")
        self.LabelTa.configure(activeforeground="black")
        self.LabelTa.configure(background="#d9d9d9")
        self.LabelTa.configure(disabledforeground="#a3a3a3")
        self.LabelTa.configure(foreground="#000000")
        self.LabelTa.configure(highlightbackground="#d9d9d9")
        self.LabelTa.configure(highlightcolor="black")
        self.LabelTa.configure(text='''ta (yr)''')

        self.EntryTa = tk.Entry(self.Labelframe6)
        self.EntryTa.place(relx=0.323, rely=0.688, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryTa.configure(background="white")
        self.EntryTa.configure(disabledforeground="#a3a3a3")
        self.EntryTa.configure(font="TkFixedFont")
        self.EntryTa.configure(foreground="#000000")
        self.EntryTa.configure(highlightbackground="#d9d9d9")
        self.EntryTa.configure(highlightcolor="black")
        self.EntryTa.configure(insertbackground="black")
        self.EntryTa.configure(selectbackground="blue")
        self.EntryTa.configure(selectforeground="white")

        self.Labelframe7 = tk.LabelFrame(self.Labelframe1)
        self.Labelframe7.place(relx=0.038, rely=0.648, relheight=0.302
                , relwidth=0.917, bordermode='ignore')
        self.Labelframe7.configure(relief='groove')
        self.Labelframe7.configure(foreground="black")
        self.Labelframe7.configure(text='''Space PDF''')
        self.Labelframe7.configure(background="#d9d9d9")
        self.Labelframe7.configure(highlightbackground="#d9d9d9")
        self.Labelframe7.configure(highlightcolor="black")

        self.LabelD = tk.Label(self.Labelframe7)
        self.LabelD.place(relx=0.041, rely=0.229, height=17, width=53
                , bordermode='ignore')
        self.LabelD.configure(activebackground="#f9f9f9")
        self.LabelD.configure(activeforeground="black")
        self.LabelD.configure(background="#d9d9d9")
        self.LabelD.configure(disabledforeground="#a3a3a3")
        self.LabelD.configure(foreground="#000000")
        self.LabelD.configure(highlightbackground="#d9d9d9")
        self.LabelD.configure(highlightcolor="black")
        self.LabelD.configure(text='''D (deg^2)''')

        self.LabelGamma = tk.Label(self.Labelframe7)
        self.LabelGamma.place(relx=0.068, rely=0.448, height=17, width=40
                , bordermode='ignore')
        self.LabelGamma.configure(activebackground="#f9f9f9")
        self.LabelGamma.configure(activeforeground="black")
        self.LabelGamma.configure(background="#d9d9d9")
        self.LabelGamma.configure(disabledforeground="#a3a3a3")
        self.LabelGamma.configure(foreground="#000000")
        self.LabelGamma.configure(highlightbackground="#d9d9d9")
        self.LabelGamma.configure(highlightcolor="black")
        self.LabelGamma.configure(text='''gamma''')

        self.LabelQ = tk.Label(self.Labelframe7)
        self.LabelQ.place(relx=0.073, rely=0.688, height=18, width=39
                , bordermode='ignore')
        self.LabelQ.configure(activebackground="#f9f9f9")
        self.LabelQ.configure(activeforeground="black")
        self.LabelQ.configure(background="#d9d9d9")
        self.LabelQ.configure(disabledforeground="#a3a3a3")
        self.LabelQ.configure(foreground="#000000")
        self.LabelQ.configure(highlightbackground="#d9d9d9")
        self.LabelQ.configure(highlightcolor="black")
        self.LabelQ.configure(text='''q''')

        self.EntryD = tk.Entry(self.Labelframe7)
        self.EntryD.place(relx=0.323, rely=0.229, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryD.configure(background="white")
        self.EntryD.configure(disabledforeground="#a3a3a3")
        self.EntryD.configure(font="TkFixedFont")
        self.EntryD.configure(foreground="#000000")
        self.EntryD.configure(highlightbackground="#d9d9d9")
        self.EntryD.configure(highlightcolor="black")
        self.EntryD.configure(insertbackground="black")
        self.EntryD.configure(selectbackground="blue")
        self.EntryD.configure(selectforeground="white")

        self.EntryGamma = tk.Entry(self.Labelframe7)
        self.EntryGamma.place(relx=0.323, rely=0.458, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryGamma.configure(background="white")
        self.EntryGamma.configure(disabledforeground="#a3a3a3")
        self.EntryGamma.configure(font="TkFixedFont")
        self.EntryGamma.configure(foreground="#000000")
        self.EntryGamma.configure(highlightbackground="#d9d9d9")
        self.EntryGamma.configure(highlightcolor="black")
        self.EntryGamma.configure(insertbackground="black")
        self.EntryGamma.configure(selectbackground="blue")
        self.EntryGamma.configure(selectforeground="white")

        self.EntryQ = tk.Entry(self.Labelframe7)
        self.EntryQ.place(relx=0.323, rely=0.688, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryQ.configure(background="white")
        self.EntryQ.configure(disabledforeground="#a3a3a3")
        self.EntryQ.configure(font="TkFixedFont")
        self.EntryQ.configure(foreground="#000000")
        self.EntryQ.configure(highlightbackground="#d9d9d9")
        self.EntryQ.configure(highlightcolor="black")
        self.EntryQ.configure(insertbackground="black")
        self.EntryQ.configure(selectbackground="blue")
        self.EntryQ.configure(selectforeground="white")

        self.ButtonPlotSpacePdf = tk.Button(self.Labelframe7)
        self.ButtonPlotSpacePdf.place(relx=0.636, rely=0.396, height=30, width=60
                , bordermode='ignore')
        self.ButtonPlotSpacePdf.configure(activebackground="#ececec")
        self.ButtonPlotSpacePdf.configure(activeforeground="#000000")
        self.ButtonPlotSpacePdf.configure(background="#d9d9d9")
        self.ButtonPlotSpacePdf.configure(command=app_support.plot_space_pdf)
        self.ButtonPlotSpacePdf.configure(disabledforeground="#a3a3a3")
        self.ButtonPlotSpacePdf.configure(foreground="#000000")
        self.ButtonPlotSpacePdf.configure(highlightbackground="#d9d9d9")
        self.ButtonPlotSpacePdf.configure(highlightcolor="black")
        self.ButtonPlotSpacePdf.configure(pady="0")
        self.ButtonPlotSpacePdf.configure(text='''Plot''')

        self.Labelframe2 = tk.LabelFrame(self.MainETAS)
        self.Labelframe2.place(relx=0.353, rely=0.019, relheight=0.203
                , relwidth=0.288)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(foreground="black")
        self.Labelframe2.configure(text='''Mag-freq distribution (all floats)''')
        self.Labelframe2.configure(background="#d9d9d9")
        self.Labelframe2.configure(highlightbackground="#d9d9d9")
        self.Labelframe2.configure(highlightcolor="black")

        self.LabelB = tk.Label(self.Labelframe2)
        self.LabelB.place(relx=0.091, rely=0.198, height=17, width=52
                , bordermode='ignore')
        self.LabelB.configure(activebackground="#f9f9f9")
        self.LabelB.configure(activeforeground="black")
        self.LabelB.configure(background="#d9d9d9")
        self.LabelB.configure(disabledforeground="#a3a3a3")
        self.LabelB.configure(foreground="#000000")
        self.LabelB.configure(highlightbackground="#d9d9d9")
        self.LabelB.configure(highlightcolor="black")
        self.LabelB.configure(text='''b-value''')

        self.LabelMmin = tk.Label(self.Labelframe2)
        self.LabelMmin.place(relx=0.091, rely=0.448, height=17, width=52
                , bordermode='ignore')
        self.LabelMmin.configure(activebackground="#f9f9f9")
        self.LabelMmin.configure(activeforeground="black")
        self.LabelMmin.configure(background="#d9d9d9")
        self.LabelMmin.configure(disabledforeground="#a3a3a3")
        self.LabelMmin.configure(foreground="#000000")
        self.LabelMmin.configure(highlightbackground="#d9d9d9")
        self.LabelMmin.configure(highlightcolor="black")
        self.LabelMmin.configure(text='''Mmin''')

        self.LabelMmax = tk.Label(self.Labelframe2)
        self.LabelMmax.place(relx=0.091, rely=0.698, height=17, width=52
                , bordermode='ignore')
        self.LabelMmax.configure(activebackground="#f9f9f9")
        self.LabelMmax.configure(activeforeground="black")
        self.LabelMmax.configure(background="#d9d9d9")
        self.LabelMmax.configure(disabledforeground="#a3a3a3")
        self.LabelMmax.configure(foreground="#000000")
        self.LabelMmax.configure(highlightbackground="#d9d9d9")
        self.LabelMmax.configure(highlightcolor="black")
        self.LabelMmax.configure(text='''Mmax''')

        self.EntryB = tk.Entry(self.Labelframe2)
        self.EntryB.place(relx=0.386, rely=0.198, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryB.configure(background="white")
        self.EntryB.configure(disabledforeground="#a3a3a3")
        self.EntryB.configure(font="TkFixedFont")
        self.EntryB.configure(foreground="#000000")
        self.EntryB.configure(highlightbackground="#d9d9d9")
        self.EntryB.configure(highlightcolor="black")
        self.EntryB.configure(insertbackground="black")
        self.EntryB.configure(selectbackground="blue")
        self.EntryB.configure(selectforeground="white")

        self.EntryMmin = tk.Entry(self.Labelframe2)
        self.EntryMmin.place(relx=0.386, rely=0.448, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryMmin.configure(background="white")
        self.EntryMmin.configure(disabledforeground="#a3a3a3")
        self.EntryMmin.configure(font="TkFixedFont")
        self.EntryMmin.configure(foreground="#000000")
        self.EntryMmin.configure(highlightbackground="#d9d9d9")
        self.EntryMmin.configure(highlightcolor="black")
        self.EntryMmin.configure(insertbackground="black")
        self.EntryMmin.configure(selectbackground="blue")
        self.EntryMmin.configure(selectforeground="white")

        self.EntryMmax = tk.Entry(self.Labelframe2)
        self.EntryMmax.place(relx=0.386, rely=0.698, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryMmax.configure(background="white")
        self.EntryMmax.configure(disabledforeground="#a3a3a3")
        self.EntryMmax.configure(font="TkFixedFont")
        self.EntryMmax.configure(foreground="#000000")
        self.EntryMmax.configure(highlightbackground="#d9d9d9")
        self.EntryMmax.configure(highlightcolor="black")
        self.EntryMmax.configure(insertbackground="black")
        self.EntryMmax.configure(selectbackground="blue")
        self.EntryMmax.configure(selectforeground="white")

        self.ButtonPlotMagFreq = tk.Button(self.Labelframe2)
        self.ButtonPlotMagFreq.place(relx=0.659, rely=0.396, height=30, width=60
                , bordermode='ignore')
        self.ButtonPlotMagFreq.configure(activebackground="#ececec")
        self.ButtonPlotMagFreq.configure(activeforeground="#000000")
        self.ButtonPlotMagFreq.configure(background="#d9d9d9")
        self.ButtonPlotMagFreq.configure(command=app_support.plot_mag_freq_distr)
        self.ButtonPlotMagFreq.configure(disabledforeground="#a3a3a3")
        self.ButtonPlotMagFreq.configure(foreground="#000000")
        self.ButtonPlotMagFreq.configure(highlightbackground="#d9d9d9")
        self.ButtonPlotMagFreq.configure(highlightcolor="black")
        self.ButtonPlotMagFreq.configure(pady="0")
        self.ButtonPlotMagFreq.configure(text='''Plot''')

        self.Labelframe3 = tk.LabelFrame(self.MainETAS)
        self.Labelframe3.place(relx=0.353, rely=0.224, relheight=0.264
                , relwidth=0.288)
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(foreground="black")
        self.Labelframe3.configure(text='''Magnitude Incompletess (all floats)''')
        self.Labelframe3.configure(background="#d9d9d9")
        self.Labelframe3.configure(highlightbackground="#d9d9d9")
        self.Labelframe3.configure(highlightcolor="black")

        self.LabelC1 = tk.Label(self.Labelframe3)
        self.LabelC1.place(relx=0.068, rely=0.144, height=18, width=60
                , bordermode='ignore')
        self.LabelC1.configure(activebackground="#f9f9f9")
        self.LabelC1.configure(activeforeground="black")
        self.LabelC1.configure(background="#d9d9d9")
        self.LabelC1.configure(disabledforeground="#a3a3a3")
        self.LabelC1.configure(foreground="#000000")
        self.LabelC1.configure(highlightbackground="#d9d9d9")
        self.LabelC1.configure(highlightcolor="black")
        self.LabelC1.configure(text='''c1''')

        self.LabelC2 = tk.Label(self.Labelframe3)
        self.LabelC2.place(relx=0.068, rely=0.352, height=19, width=60
                , bordermode='ignore')
        self.LabelC2.configure(activebackground="#f9f9f9")
        self.LabelC2.configure(activeforeground="black")
        self.LabelC2.configure(background="#d9d9d9")
        self.LabelC2.configure(disabledforeground="#a3a3a3")
        self.LabelC2.configure(foreground="#000000")
        self.LabelC2.configure(highlightbackground="#d9d9d9")
        self.LabelC2.configure(highlightcolor="black")
        self.LabelC2.configure(text='''c2''')

        self.LabelC3 = tk.Label(self.Labelframe3)
        self.LabelC3.place(relx=0.068, rely=0.568, height=18, width=60
                , bordermode='ignore')
        self.LabelC3.configure(activebackground="#f9f9f9")
        self.LabelC3.configure(activeforeground="black")
        self.LabelC3.configure(background="#d9d9d9")
        self.LabelC3.configure(disabledforeground="#a3a3a3")
        self.LabelC3.configure(foreground="#000000")
        self.LabelC3.configure(highlightbackground="#d9d9d9")
        self.LabelC3.configure(highlightcolor="black")
        self.LabelC3.configure(text='''c3''')

        self.LabelMminInc = tk.Label(self.Labelframe3)
        self.LabelMminInc.place(relx=0.068, rely=0.784, height=18, width=60
                , bordermode='ignore')
        self.LabelMminInc.configure(activebackground="#f9f9f9")
        self.LabelMminInc.configure(activeforeground="black")
        self.LabelMminInc.configure(background="#d9d9d9")
        self.LabelMminInc.configure(disabledforeground="#a3a3a3")
        self.LabelMminInc.configure(foreground="#000000")
        self.LabelMminInc.configure(highlightbackground="#d9d9d9")
        self.LabelMminInc.configure(highlightcolor="black")
        self.LabelMminInc.configure(text='''Mmin(inc)''')

        self.EntryC1 = tk.Entry(self.Labelframe3)
        self.EntryC1.place(relx=0.386, rely=0.144, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryC1.configure(background="white")
        self.EntryC1.configure(disabledforeground="#a3a3a3")
        self.EntryC1.configure(font="TkFixedFont")
        self.EntryC1.configure(foreground="#000000")
        self.EntryC1.configure(highlightbackground="#d9d9d9")
        self.EntryC1.configure(highlightcolor="black")
        self.EntryC1.configure(insertbackground="black")
        self.EntryC1.configure(selectbackground="blue")
        self.EntryC1.configure(selectforeground="white")
        self.EntryC1.configure(textvariable=app_support.c1)

        self.EntryC2 = tk.Entry(self.Labelframe3)
        self.EntryC2.place(relx=0.386, rely=0.352, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryC2.configure(background="white")
        self.EntryC2.configure(disabledforeground="#a3a3a3")
        self.EntryC2.configure(font="TkFixedFont")
        self.EntryC2.configure(foreground="#000000")
        self.EntryC2.configure(highlightbackground="#d9d9d9")
        self.EntryC2.configure(highlightcolor="black")
        self.EntryC2.configure(insertbackground="black")
        self.EntryC2.configure(selectbackground="blue")
        self.EntryC2.configure(selectforeground="white")
        self.EntryC2.configure(textvariable=app_support.c2)

        self.EntryC3 = tk.Entry(self.Labelframe3)
        self.EntryC3.place(relx=0.386, rely=0.568, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryC3.configure(background="white")
        self.EntryC3.configure(disabledforeground="#a3a3a3")
        self.EntryC3.configure(font="TkFixedFont")
        self.EntryC3.configure(foreground="#000000")
        self.EntryC3.configure(highlightbackground="#d9d9d9")
        self.EntryC3.configure(highlightcolor="black")
        self.EntryC3.configure(insertbackground="black")
        self.EntryC3.configure(selectbackground="blue")
        self.EntryC3.configure(selectforeground="white")
        self.EntryC3.configure(textvariable=app_support.c3)

        self.EntryMminInc = tk.Entry(self.Labelframe3)
        self.EntryMminInc.place(relx=0.386, rely=0.784, height=20, relwidth=0.227
                , bordermode='ignore')
        self.EntryMminInc.configure(background="white")
        self.EntryMminInc.configure(disabledforeground="#a3a3a3")
        self.EntryMminInc.configure(font="TkFixedFont")
        self.EntryMminInc.configure(foreground="#000000")
        self.EntryMminInc.configure(highlightbackground="#d9d9d9")
        self.EntryMminInc.configure(highlightcolor="black")
        self.EntryMminInc.configure(insertbackground="black")
        self.EntryMminInc.configure(selectbackground="blue")
        self.EntryMminInc.configure(selectforeground="white")
        self.EntryMminInc.configure(textvariable=app_support.m_min_inc)

        self.ButtonMagIncompl = tk.Button(self.Labelframe3)
        self.ButtonMagIncompl.place(relx=0.659, rely=0.432, height=30, width=60
                , bordermode='ignore')
        self.ButtonMagIncompl.configure(activebackground="#ececec")
        self.ButtonMagIncompl.configure(activeforeground="#000000")
        self.ButtonMagIncompl.configure(background="#d9d9d9")
        self.ButtonMagIncompl.configure(command=app_support.plot_mag_incompl)
        self.ButtonMagIncompl.configure(disabledforeground="#a3a3a3")
        self.ButtonMagIncompl.configure(foreground="#000000")
        self.ButtonMagIncompl.configure(highlightbackground="#d9d9d9")
        self.ButtonMagIncompl.configure(highlightcolor="black")
        self.ButtonMagIncompl.configure(pady="0")
        self.ButtonMagIncompl.configure(text='''Plot''')

        self.Labelframe4 = tk.LabelFrame(self.MainETAS)
        self.Labelframe4.place(relx=0.654, rely=0.019, relheight=0.304
                , relwidth=0.326)
        self.Labelframe4.configure(relief='groove')
        self.Labelframe4.configure(foreground="black")
        self.Labelframe4.configure(text='''ETAS model''')
        self.Labelframe4.configure(background="#d9d9d9")
        self.Labelframe4.configure(highlightbackground="#d9d9d9")
        self.Labelframe4.configure(highlightcolor="black")

        self.LabelTimeTrunc = tk.Label(self.Labelframe4)
        self.LabelTimeTrunc.place(relx=0.048, rely=0.188, height=19, width=125
                , bordermode='ignore')
        self.LabelTimeTrunc.configure(activebackground="#f9f9f9")
        self.LabelTimeTrunc.configure(activeforeground="black")
        self.LabelTimeTrunc.configure(anchor='w')
        self.LabelTimeTrunc.configure(background="#d9d9d9")
        self.LabelTimeTrunc.configure(disabledforeground="#a3a3a3")
        self.LabelTimeTrunc.configure(foreground="#000000")
        self.LabelTimeTrunc.configure(highlightbackground="#d9d9d9")
        self.LabelTimeTrunc.configure(highlightcolor="black")
        self.LabelTimeTrunc.configure(text='''Time truncation''')

        self.LabelMagTrunc = tk.Label(self.Labelframe4)
        self.LabelMagTrunc.place(relx=0.048, rely=0.375, height=19, width=125
                , bordermode='ignore')
        self.LabelMagTrunc.configure(activebackground="#f9f9f9")
        self.LabelMagTrunc.configure(activeforeground="black")
        self.LabelMagTrunc.configure(anchor='w')
        self.LabelMagTrunc.configure(background="#d9d9d9")
        self.LabelMagTrunc.configure(disabledforeground="#a3a3a3")
        self.LabelMagTrunc.configure(foreground="#000000")
        self.LabelMagTrunc.configure(highlightbackground="#d9d9d9")
        self.LabelMagTrunc.configure(highlightcolor="black")
        self.LabelMagTrunc.configure(text='''Magnitude truncation''')

        self.LabelSpatPdf = tk.Label(self.Labelframe4)
        self.LabelSpatPdf.place(relx=0.048, rely=0.563, height=20, width=125
                , bordermode='ignore')
        self.LabelSpatPdf.configure(activebackground="#f9f9f9")
        self.LabelSpatPdf.configure(activeforeground="black")
        self.LabelSpatPdf.configure(anchor='w')
        self.LabelSpatPdf.configure(background="#d9d9d9")
        self.LabelSpatPdf.configure(disabledforeground="#a3a3a3")
        self.LabelSpatPdf.configure(foreground="#000000")
        self.LabelSpatPdf.configure(highlightbackground="#d9d9d9")
        self.LabelSpatPdf.configure(highlightcolor="black")
        self.LabelSpatPdf.configure(text='''Spatial PDF''')

        self.LabelMagInc = tk.Label(self.Labelframe4)
        self.LabelMagInc.place(relx=0.052, rely=0.75, height=20, width=148
                , bordermode='ignore')
        self.LabelMagInc.configure(activebackground="#f9f9f9")
        self.LabelMagInc.configure(activeforeground="black")
        self.LabelMagInc.configure(anchor='w')
        self.LabelMagInc.configure(background="#d9d9d9")
        self.LabelMagInc.configure(disabledforeground="#a3a3a3")
        self.LabelMagInc.configure(foreground="#000000")
        self.LabelMagInc.configure(highlightbackground="#d9d9d9")
        self.LabelMagInc.configure(highlightcolor="black")
        self.LabelMagInc.configure(text='''Magnitude Incompleteness''')

        self.TComboboxTimeTrunc = ttk.Combobox(self.Labelframe4)
        self.TComboboxTimeTrunc.place(relx=0.667, rely=0.174, relheight=0.16
                , relwidth=0.269, bordermode='ignore')
        self.value_list = ['True','False',]
        self.TComboboxTimeTrunc.configure(values=self.value_list)
        self.TComboboxTimeTrunc.configure(textvariable=app_support.combobox_timetrunc)
        self.TComboboxTimeTrunc.configure(takefocus="")

        self.TComboboxMagTrunc = ttk.Combobox(self.Labelframe4)
        self.TComboboxMagTrunc.place(relx=0.667, rely=0.361, relheight=0.16
                , relwidth=0.269, bordermode='ignore')
        self.value_list = ['True',]
        self.TComboboxMagTrunc.configure(values=self.value_list)
        self.TComboboxMagTrunc.configure(textvariable=app_support.combobox_magtrunc)
        self.TComboboxMagTrunc.configure(takefocus="")

        self.TComboboxSpatialPdf = ttk.Combobox(self.Labelframe4)
        self.TComboboxSpatialPdf.place(relx=0.667, rely=0.549, relheight=0.16
                , relwidth=0.269, bordermode='ignore')
        self.value_list = ['Magnitude-dependent',]
        self.TComboboxSpatialPdf.configure(values=self.value_list)
        self.TComboboxSpatialPdf.configure(textvariable=app_support.combobox_spatialpdf)
        self.TComboboxSpatialPdf.configure(takefocus="")

        self.TComboboxMagInc = ttk.Combobox(self.Labelframe4)
        self.TComboboxMagInc.place(relx=0.667, rely=0.736, relheight=0.16
                , relwidth=0.269, bordermode='ignore')
        self.value_list = ['True','False',]
        self.TComboboxMagInc.configure(values=self.value_list)
        self.TComboboxMagInc.configure(textvariable=app_support.combobox_maginc)
        self.TComboboxMagInc.configure(takefocus="")

        self.Labelframe8 = tk.LabelFrame(self.MainETAS)
        self.Labelframe8.place(relx=0.654, rely=0.326, relheight=0.163
                , relwidth=0.326)
        self.Labelframe8.configure(relief='groove')
        self.Labelframe8.configure(foreground="black")
        self.Labelframe8.configure(text='''Options''')
        self.Labelframe8.configure(background="#d9d9d9")
        self.Labelframe8.configure(highlightbackground="#d9d9d9")
        self.Labelframe8.configure(highlightcolor="black")

        self.LabelNumSimul = tk.Label(self.Labelframe8)
        self.LabelNumSimul.place(relx=0.08, rely=0.312, height=19, width=88
                , bordermode='ignore')
        self.LabelNumSimul.configure(activebackground="#f9f9f9")
        self.LabelNumSimul.configure(activeforeground="black")
        self.LabelNumSimul.configure(anchor='w')
        self.LabelNumSimul.configure(background="#d9d9d9")
        self.LabelNumSimul.configure(disabledforeground="#a3a3a3")
        self.LabelNumSimul.configure(foreground="#000000")
        self.LabelNumSimul.configure(highlightbackground="#d9d9d9")
        self.LabelNumSimul.configure(highlightcolor="black")
        self.LabelNumSimul.configure(text='''Simulations''')

        self.LabelMultipr = tk.Label(self.Labelframe8)
        self.LabelMultipr.place(relx=0.08, rely=0.623, height=19, width=107
                , bordermode='ignore')
        self.LabelMultipr.configure(activebackground="#f9f9f9")
        self.LabelMultipr.configure(activeforeground="black")
        self.LabelMultipr.configure(anchor='w')
        self.LabelMultipr.configure(background="#d9d9d9")
        self.LabelMultipr.configure(disabledforeground="#a3a3a3")
        self.LabelMultipr.configure(foreground="#000000")
        self.LabelMultipr.configure(highlightbackground="#d9d9d9")
        self.LabelMultipr.configure(highlightcolor="black")
        self.LabelMultipr.configure(text='''Multiprocessing''')

        self.EntryNumSimul = tk.Entry(self.Labelframe8)
        self.EntryNumSimul.place(relx=0.683, rely=0.312, height=20
                , relwidth=0.241, bordermode='ignore')
        self.EntryNumSimul.configure(background="white")
        self.EntryNumSimul.configure(disabledforeground="#a3a3a3")
        self.EntryNumSimul.configure(font="TkFixedFont")
        self.EntryNumSimul.configure(foreground="#000000")
        self.EntryNumSimul.configure(highlightbackground="#d9d9d9")
        self.EntryNumSimul.configure(highlightcolor="black")
        self.EntryNumSimul.configure(insertbackground="black")
        self.EntryNumSimul.configure(selectbackground="blue")
        self.EntryNumSimul.configure(selectforeground="white")

        self.TComboboxMultiproc = ttk.Combobox(self.Labelframe8)
        self.TComboboxMultiproc.place(relx=0.683, rely=0.623, relheight=0.247
                , relwidth=0.241, bordermode='ignore')
        self.value_list = ['True','False',]
        self.TComboboxMultiproc.configure(values=self.value_list)
        self.TComboboxMultiproc.configure(textvariable=app_support.combobox_multiproces)
        self.TComboboxMultiproc.configure(takefocus="")

        self.ButtonRunETAS = tk.Button(self.MainETAS)
        self.ButtonRunETAS.place(relx=0.065, rely=0.854, height=40, width=167)
        self.ButtonRunETAS.configure(activebackground="#ececec")
        self.ButtonRunETAS.configure(activeforeground="#000000")
        self.ButtonRunETAS.configure(background="#d9d9d9")
        self.ButtonRunETAS.configure(command=app_support.run_etas)
        self.ButtonRunETAS.configure(disabledforeground="#a3a3a3")
        self.ButtonRunETAS.configure(foreground="#000000")
        self.ButtonRunETAS.configure(highlightbackground="#d9d9d9")
        self.ButtonRunETAS.configure(highlightcolor="black")
        self.ButtonRunETAS.configure(pady="0")
        self.ButtonRunETAS.configure(state='disabled')
        self.ButtonRunETAS.configure(text='''RUN ETAS SIMULATIONS''')

        self.ButtonBuildEtas = tk.Button(self.MainETAS)
        self.ButtonBuildEtas.place(relx=0.065, rely=0.753, height=40, width=167)
        self.ButtonBuildEtas.configure(activebackground="#ececec")
        self.ButtonBuildEtas.configure(activeforeground="#000000")
        self.ButtonBuildEtas.configure(background="#d9d9d9")
        self.ButtonBuildEtas.configure(command=app_support.build_etas_model)
        self.ButtonBuildEtas.configure(disabledforeground="#a3a3a3")
        self.ButtonBuildEtas.configure(foreground="#000000")
        self.ButtonBuildEtas.configure(highlightbackground="#d9d9d9")
        self.ButtonBuildEtas.configure(highlightcolor="black")
        self.ButtonBuildEtas.configure(pady="0")
        self.ButtonBuildEtas.configure(state='disabled')
        self.ButtonBuildEtas.configure(text='''Build ETAS model''')

        self.Labelframe9 = tk.LabelFrame(self.MainETAS)
        self.Labelframe9.place(relx=0.353, rely=0.488, relheight=0.203
                , relwidth=0.627)
        self.Labelframe9.configure(relief='groove')
        self.Labelframe9.configure(foreground="black")
        self.Labelframe9.configure(text='''Optional - Depth distribution (all floats)''')
        self.Labelframe9.configure(background="#d9d9d9")
        self.Labelframe9.configure(highlightbackground="#d9d9d9")
        self.Labelframe9.configure(highlightcolor="black")

        self.LabelDepthDistr = tk.Label(self.Labelframe9)
        self.LabelDepthDistr.place(relx=0.042, rely=0.302, height=19, width=60
                , bordermode='ignore')
        self.LabelDepthDistr.configure(activebackground="#f9f9f9")
        self.LabelDepthDistr.configure(activeforeground="black")
        self.LabelDepthDistr.configure(background="#d9d9d9")
        self.LabelDepthDistr.configure(disabledforeground="#a3a3a3")
        self.LabelDepthDistr.configure(foreground="#000000")
        self.LabelDepthDistr.configure(highlightbackground="#d9d9d9")
        self.LabelDepthDistr.configure(highlightcolor="black")
        self.LabelDepthDistr.configure(text='''Depth (km)''')

        self.LabelProbDepth = tk.Label(self.Labelframe9)
        self.LabelProbDepth.place(relx=0.042, rely=0.604, height=19, width=60
                , bordermode='ignore')
        self.LabelProbDepth.configure(activebackground="#f9f9f9")
        self.LabelProbDepth.configure(activeforeground="black")
        self.LabelProbDepth.configure(background="#d9d9d9")
        self.LabelProbDepth.configure(disabledforeground="#a3a3a3")
        self.LabelProbDepth.configure(foreground="#000000")
        self.LabelProbDepth.configure(highlightbackground="#d9d9d9")
        self.LabelProbDepth.configure(highlightcolor="black")
        self.LabelProbDepth.configure(text='''Probability''')

        self.EntryDepthEtas = tk.Entry(self.Labelframe9)
        self.EntryDepthEtas.place(relx=0.188, rely=0.302, height=20
                , relwidth=0.104, bordermode='ignore')
        self.EntryDepthEtas.configure(background="white")
        self.EntryDepthEtas.configure(disabledforeground="#a3a3a3")
        self.EntryDepthEtas.configure(font="TkFixedFont")
        self.EntryDepthEtas.configure(foreground="#000000")
        self.EntryDepthEtas.configure(highlightbackground="#d9d9d9")
        self.EntryDepthEtas.configure(highlightcolor="black")
        self.EntryDepthEtas.configure(insertbackground="black")
        self.EntryDepthEtas.configure(selectbackground="blue")
        self.EntryDepthEtas.configure(selectforeground="white")

        self.EntryDepthProb = tk.Entry(self.Labelframe9)
        self.EntryDepthProb.place(relx=0.188, rely=0.604, height=20
                , relwidth=0.104, bordermode='ignore')
        self.EntryDepthProb.configure(background="white")
        self.EntryDepthProb.configure(disabledforeground="#a3a3a3")
        self.EntryDepthProb.configure(font="TkFixedFont")
        self.EntryDepthProb.configure(foreground="#000000")
        self.EntryDepthProb.configure(highlightbackground="#d9d9d9")
        self.EntryDepthProb.configure(highlightcolor="black")
        self.EntryDepthProb.configure(insertbackground="black")
        self.EntryDepthProb.configure(selectbackground="blue")
        self.EntryDepthProb.configure(selectforeground="white")

        self.ButtonAddDep = tk.Button(self.Labelframe9)
        self.ButtonAddDep.place(relx=0.313, rely=0.198, height=20, width=50
                , bordermode='ignore')
        self.ButtonAddDep.configure(activebackground="#ececec")
        self.ButtonAddDep.configure(activeforeground="#000000")
        self.ButtonAddDep.configure(background="#d9d9d9")
        self.ButtonAddDep.configure(command=app_support.add_depth_pdf)
        self.ButtonAddDep.configure(disabledforeground="#a3a3a3")
        self.ButtonAddDep.configure(foreground="#000000")
        self.ButtonAddDep.configure(highlightbackground="#d9d9d9")
        self.ButtonAddDep.configure(highlightcolor="black")
        self.ButtonAddDep.configure(pady="0")
        self.ButtonAddDep.configure(text='''Add''')

        self.ButtonDeleteDep = tk.Button(self.Labelframe9)
        self.ButtonDeleteDep.place(relx=0.313, rely=0.698, height=20, width=50
                , bordermode='ignore')
        self.ButtonDeleteDep.configure(activebackground="#ececec")
        self.ButtonDeleteDep.configure(activeforeground="#000000")
        self.ButtonDeleteDep.configure(background="#d9d9d9")
        self.ButtonDeleteDep.configure(command=app_support.delete_selected_depth)
        self.ButtonDeleteDep.configure(disabledforeground="#a3a3a3")
        self.ButtonDeleteDep.configure(foreground="#000000")
        self.ButtonDeleteDep.configure(highlightbackground="#d9d9d9")
        self.ButtonDeleteDep.configure(highlightcolor="black")
        self.ButtonDeleteDep.configure(pady="0")
        self.ButtonDeleteDep.configure(text='''Delete''')

        self.ScrolledtreeviewDepthEtas = ScrolledTreeView(self.Labelframe9)
        self.ScrolledtreeviewDepthEtas.place(relx=0.449, rely=0.198
                , relheight=0.656, relwidth=0.511, bordermode='ignore')
        self.ScrolledtreeviewDepthEtas.configure(columns="Col1 Col2")
        # build_treeview_support starting.
        self.ScrolledtreeviewDepthEtas.heading("#0",text="Id")
        self.ScrolledtreeviewDepthEtas.heading("#0",anchor="center")
        self.ScrolledtreeviewDepthEtas.column("#0",width="22")
        self.ScrolledtreeviewDepthEtas.column("#0",minwidth="20")
        self.ScrolledtreeviewDepthEtas.column("#0",stretch="1")
        self.ScrolledtreeviewDepthEtas.column("#0",anchor="w")
        self.ScrolledtreeviewDepthEtas.heading("Col1",text="prob")
        self.ScrolledtreeviewDepthEtas.heading("Col1",anchor="center")
        self.ScrolledtreeviewDepthEtas.column("Col1",width="102")
        self.ScrolledtreeviewDepthEtas.column("Col1",minwidth="20")
        self.ScrolledtreeviewDepthEtas.column("Col1",stretch="1")
        self.ScrolledtreeviewDepthEtas.column("Col1",anchor="w")
        self.ScrolledtreeviewDepthEtas.heading("Col2",text="depth")
        self.ScrolledtreeviewDepthEtas.heading("Col2",anchor="center")
        self.ScrolledtreeviewDepthEtas.column("Col2",width="102")
        self.ScrolledtreeviewDepthEtas.column("Col2",minwidth="20")
        self.ScrolledtreeviewDepthEtas.column("Col2",stretch="1")
        self.ScrolledtreeviewDepthEtas.column("Col2",anchor="w")

        self.ButtonAddDepthCsv = tk.Button(self.Labelframe9)
        self.ButtonAddDepthCsv.place(relx=0.313, rely=0.448, height=20, width=50
                , bordermode='ignore')
        self.ButtonAddDepthCsv.configure(activebackground="#ececec")
        self.ButtonAddDepthCsv.configure(activeforeground="#000000")
        self.ButtonAddDepthCsv.configure(background="#d9d9d9")
        self.ButtonAddDepthCsv.configure(command=app_support.upload_csv_depth)
        self.ButtonAddDepthCsv.configure(disabledforeground="#a3a3a3")
        self.ButtonAddDepthCsv.configure(foreground="#000000")
        self.ButtonAddDepthCsv.configure(highlightbackground="#d9d9d9")
        self.ButtonAddDepthCsv.configure(highlightcolor="black")
        self.ButtonAddDepthCsv.configure(pady="0")
        self.ButtonAddDepthCsv.configure(text='''csv''')

        self.Labelframe10 = tk.LabelFrame(self.MainETAS)
        self.Labelframe10.place(relx=0.353, rely=0.691, relheight=0.273
                , relwidth=0.627)
        self.Labelframe10.configure(relief='groove')
        self.Labelframe10.configure(foreground="black")
        self.Labelframe10.configure(text='''Optional - Nodal plane distribution (all floats)''')
        self.Labelframe10.configure(background="#d9d9d9")
        self.Labelframe10.configure(highlightbackground="#d9d9d9")
        self.Labelframe10.configure(highlightcolor="black")

        self.LabelStrikeEtas = tk.Label(self.Labelframe10)
        self.LabelStrikeEtas.place(relx=0.044, rely=0.186, height=19, width=61
                , bordermode='ignore')
        self.LabelStrikeEtas.configure(activebackground="#f9f9f9")
        self.LabelStrikeEtas.configure(activeforeground="black")
        self.LabelStrikeEtas.configure(background="#d9d9d9")
        self.LabelStrikeEtas.configure(disabledforeground="#a3a3a3")
        self.LabelStrikeEtas.configure(foreground="#000000")
        self.LabelStrikeEtas.configure(highlightbackground="#d9d9d9")
        self.LabelStrikeEtas.configure(highlightcolor="black")
        self.LabelStrikeEtas.configure(text='''Strike''')

        self.LabelDipEtas = tk.Label(self.Labelframe10)
        self.LabelDipEtas.place(relx=0.044, rely=0.372, height=19, width=61
                , bordermode='ignore')
        self.LabelDipEtas.configure(activebackground="#f9f9f9")
        self.LabelDipEtas.configure(activeforeground="black")
        self.LabelDipEtas.configure(background="#d9d9d9")
        self.LabelDipEtas.configure(disabledforeground="#a3a3a3")
        self.LabelDipEtas.configure(foreground="#000000")
        self.LabelDipEtas.configure(highlightbackground="#d9d9d9")
        self.LabelDipEtas.configure(highlightcolor="black")
        self.LabelDipEtas.configure(text='''Dip''')

        self.LabelRakeEtas = tk.Label(self.Labelframe10)
        self.LabelRakeEtas.place(relx=0.044, rely=0.558, height=19, width=61
                , bordermode='ignore')
        self.LabelRakeEtas.configure(activebackground="#f9f9f9")
        self.LabelRakeEtas.configure(activeforeground="black")
        self.LabelRakeEtas.configure(background="#d9d9d9")
        self.LabelRakeEtas.configure(disabledforeground="#a3a3a3")
        self.LabelRakeEtas.configure(foreground="#000000")
        self.LabelRakeEtas.configure(highlightbackground="#d9d9d9")
        self.LabelRakeEtas.configure(highlightcolor="black")
        self.LabelRakeEtas.configure(text='''Rake''')

        self.EntryStrikeEtas = tk.Entry(self.Labelframe10)
        self.EntryStrikeEtas.place(relx=0.19, rely=0.186, height=20
                , relwidth=0.104, bordermode='ignore')
        self.EntryStrikeEtas.configure(background="white")
        self.EntryStrikeEtas.configure(disabledforeground="#a3a3a3")
        self.EntryStrikeEtas.configure(font="TkFixedFont")
        self.EntryStrikeEtas.configure(foreground="#000000")
        self.EntryStrikeEtas.configure(highlightbackground="#d9d9d9")
        self.EntryStrikeEtas.configure(highlightcolor="black")
        self.EntryStrikeEtas.configure(insertbackground="black")
        self.EntryStrikeEtas.configure(selectbackground="blue")
        self.EntryStrikeEtas.configure(selectforeground="white")

        self.EntryDipEtas = tk.Entry(self.Labelframe10)
        self.EntryDipEtas.place(relx=0.19, rely=0.372, height=20, relwidth=0.104
                , bordermode='ignore')
        self.EntryDipEtas.configure(background="white")
        self.EntryDipEtas.configure(disabledforeground="#a3a3a3")
        self.EntryDipEtas.configure(font="TkFixedFont")
        self.EntryDipEtas.configure(foreground="#000000")
        self.EntryDipEtas.configure(highlightbackground="#d9d9d9")
        self.EntryDipEtas.configure(highlightcolor="black")
        self.EntryDipEtas.configure(insertbackground="black")
        self.EntryDipEtas.configure(selectbackground="blue")
        self.EntryDipEtas.configure(selectforeground="white")

        self.EntryRakeEtas = tk.Entry(self.Labelframe10)
        self.EntryRakeEtas.place(relx=0.19, rely=0.558, height=20, relwidth=0.104
                , bordermode='ignore')
        self.EntryRakeEtas.configure(background="white")
        self.EntryRakeEtas.configure(disabledforeground="#a3a3a3")
        self.EntryRakeEtas.configure(font="TkFixedFont")
        self.EntryRakeEtas.configure(foreground="#000000")
        self.EntryRakeEtas.configure(highlightbackground="#d9d9d9")
        self.EntryRakeEtas.configure(highlightcolor="black")
        self.EntryRakeEtas.configure(insertbackground="black")
        self.EntryRakeEtas.configure(selectbackground="blue")
        self.EntryRakeEtas.configure(selectforeground="white")

        self.ScrolledtreeviewNPEtas = ScrolledTreeView(self.Labelframe10)
        self.ScrolledtreeviewNPEtas.place(relx=0.449, rely=0.147, relheight=0.705
                , relwidth=0.511, bordermode='ignore')
        self.ScrolledtreeviewNPEtas.configure(columns="Col1 Col2 Col4 Col5")
        # build_treeview_support starting.
        self.ScrolledtreeviewNPEtas.heading("#0",text="Id")
        self.ScrolledtreeviewNPEtas.heading("#0",anchor="center")
        self.ScrolledtreeviewNPEtas.column("#0",width="25")
        self.ScrolledtreeviewNPEtas.column("#0",minwidth="20")
        self.ScrolledtreeviewNPEtas.column("#0",stretch="1")
        self.ScrolledtreeviewNPEtas.column("#0",anchor="w")
        self.ScrolledtreeviewNPEtas.heading("Col1",text="prob")
        self.ScrolledtreeviewNPEtas.heading("Col1",anchor="center")
        self.ScrolledtreeviewNPEtas.column("Col1",width="50")
        self.ScrolledtreeviewNPEtas.column("Col1",minwidth="20")
        self.ScrolledtreeviewNPEtas.column("Col1",stretch="1")
        self.ScrolledtreeviewNPEtas.column("Col1",anchor="w")
        self.ScrolledtreeviewNPEtas.heading("Col2",text="strike")
        self.ScrolledtreeviewNPEtas.heading("Col2",anchor="center")
        self.ScrolledtreeviewNPEtas.column("Col2",width="50")
        self.ScrolledtreeviewNPEtas.column("Col2",minwidth="20")
        self.ScrolledtreeviewNPEtas.column("Col2",stretch="1")
        self.ScrolledtreeviewNPEtas.column("Col2",anchor="w")
        self.ScrolledtreeviewNPEtas.heading("Col4",text="dip")
        self.ScrolledtreeviewNPEtas.heading("Col4",anchor="center")
        self.ScrolledtreeviewNPEtas.column("Col4",width="50")
        self.ScrolledtreeviewNPEtas.column("Col4",minwidth="20")
        self.ScrolledtreeviewNPEtas.column("Col4",stretch="1")
        self.ScrolledtreeviewNPEtas.column("Col4",anchor="w")
        self.ScrolledtreeviewNPEtas.heading("Col5",text="rake")
        self.ScrolledtreeviewNPEtas.heading("Col5",anchor="center")
        self.ScrolledtreeviewNPEtas.column("Col5",width="51")
        self.ScrolledtreeviewNPEtas.column("Col5",minwidth="20")
        self.ScrolledtreeviewNPEtas.column("Col5",stretch="1")
        self.ScrolledtreeviewNPEtas.column("Col5",anchor="w")

        self.ButtonAddNPDist = tk.Button(self.Labelframe10)
        self.ButtonAddNPDist.place(relx=0.319, rely=0.225, height=30, width=50
                , bordermode='ignore')
        self.ButtonAddNPDist.configure(activebackground="#ececec")
        self.ButtonAddNPDist.configure(activeforeground="#000000")
        self.ButtonAddNPDist.configure(background="#d9d9d9")
        self.ButtonAddNPDist.configure(command=app_support.add_nodal_distr)
        self.ButtonAddNPDist.configure(disabledforeground="#a3a3a3")
        self.ButtonAddNPDist.configure(foreground="#000000")
        self.ButtonAddNPDist.configure(highlightbackground="#d9d9d9")
        self.ButtonAddNPDist.configure(highlightcolor="black")
        self.ButtonAddNPDist.configure(pady="0")
        self.ButtonAddNPDist.configure(text='''Add''')

        self.LabelProbEtas = tk.Label(self.Labelframe10)
        self.LabelProbEtas.place(relx=0.044, rely=0.744, height=19, width=61
                , bordermode='ignore')
        self.LabelProbEtas.configure(activebackground="#f9f9f9")
        self.LabelProbEtas.configure(activeforeground="black")
        self.LabelProbEtas.configure(background="#d9d9d9")
        self.LabelProbEtas.configure(disabledforeground="#a3a3a3")
        self.LabelProbEtas.configure(foreground="#000000")
        self.LabelProbEtas.configure(highlightbackground="#d9d9d9")
        self.LabelProbEtas.configure(highlightcolor="black")
        self.LabelProbEtas.configure(text='''Probability''')

        self.EntryProbEtas = tk.Entry(self.Labelframe10)
        self.EntryProbEtas.place(relx=0.19, rely=0.744, height=20, relwidth=0.104
                , bordermode='ignore')
        self.EntryProbEtas.configure(background="white")
        self.EntryProbEtas.configure(disabledforeground="#a3a3a3")
        self.EntryProbEtas.configure(font="TkFixedFont")
        self.EntryProbEtas.configure(foreground="#000000")
        self.EntryProbEtas.configure(highlightbackground="#d9d9d9")
        self.EntryProbEtas.configure(highlightcolor="black")
        self.EntryProbEtas.configure(insertbackground="black")
        self.EntryProbEtas.configure(selectbackground="blue")
        self.EntryProbEtas.configure(selectforeground="white")

        self.ButtonDeleteSelNP = tk.Button(self.Labelframe10)
        self.ButtonDeleteSelNP.place(relx=0.319, rely=0.589, height=30, width=50
                , bordermode='ignore')
        self.ButtonDeleteSelNP.configure(activebackground="#ececec")
        self.ButtonDeleteSelNP.configure(activeforeground="#000000")
        self.ButtonDeleteSelNP.configure(background="#d9d9d9")
        self.ButtonDeleteSelNP.configure(command=app_support.delete_selected_nodal)
        self.ButtonDeleteSelNP.configure(disabledforeground="#a3a3a3")
        self.ButtonDeleteSelNP.configure(foreground="#000000")
        self.ButtonDeleteSelNP.configure(highlightbackground="#d9d9d9")
        self.ButtonDeleteSelNP.configure(highlightcolor="black")
        self.ButtonDeleteSelNP.configure(pady="0")
        self.ButtonDeleteSelNP.configure(text='''Delete''')

        self.Labelframe11 = tk.LabelFrame(self.MainEtasPlots)
        self.Labelframe11.place(relx=0.013, rely=0.019, relheight=0.459
                , relwidth=0.982)
        self.Labelframe11.configure(relief='groove')
        self.Labelframe11.configure(foreground="black")
        self.Labelframe11.configure(text='''Single realization''')
        self.Labelframe11.configure(background="#d9d9d9")
        self.Labelframe11.configure(highlightbackground="#d9d9d9")
        self.Labelframe11.configure(highlightcolor="black")

        self.TComboboxEtasAnalyses = ttk.Combobox(self.Labelframe11)
        self.TComboboxEtasAnalyses.place(relx=0.04, rely=0.309, relheight=0.134
                , relwidth=0.213, bordermode='ignore')
        self.TComboboxEtasAnalyses.configure(state='disabled')
        self.TComboboxEtasAnalyses.configure(textvariable=app_support.combobox_etas_analyses)
        self.TComboboxEtasAnalyses.configure(takefocus="")

        self.ButtonTimePlot1 = tk.Button(self.Labelframe11)
        self.ButtonTimePlot1.place(relx=0.507, rely=0.18, height=30, width=130
                , bordermode='ignore')
        self.ButtonTimePlot1.configure(activebackground="#ececec")
        self.ButtonTimePlot1.configure(activeforeground="#000000")
        self.ButtonTimePlot1.configure(background="#d9d9d9")
        self.ButtonTimePlot1.configure(command=app_support.plot_time_etas_single)
        self.ButtonTimePlot1.configure(disabledforeground="#a3a3a3")
        self.ButtonTimePlot1.configure(foreground="#000000")
        self.ButtonTimePlot1.configure(highlightbackground="#d9d9d9")
        self.ButtonTimePlot1.configure(highlightcolor="black")
        self.ButtonTimePlot1.configure(pady="0")
        self.ButtonTimePlot1.configure(state='disabled')
        self.ButtonTimePlot1.configure(text='''Time plot''')

        self.ButtonSpacePlot1 = tk.Button(self.Labelframe11)
        self.ButtonSpacePlot1.place(relx=0.507, rely=0.355, height=30, width=130
                , bordermode='ignore')
        self.ButtonSpacePlot1.configure(activebackground="#ececec")
        self.ButtonSpacePlot1.configure(activeforeground="#000000")
        self.ButtonSpacePlot1.configure(background="#d9d9d9")
        self.ButtonSpacePlot1.configure(command=app_support.plot_space_etas_single)
        self.ButtonSpacePlot1.configure(disabledforeground="#a3a3a3")
        self.ButtonSpacePlot1.configure(foreground="#000000")
        self.ButtonSpacePlot1.configure(highlightbackground="#d9d9d9")
        self.ButtonSpacePlot1.configure(highlightcolor="black")
        self.ButtonSpacePlot1.configure(pady="0")
        self.ButtonSpacePlot1.configure(state='disabled')
        self.ButtonSpacePlot1.configure(text='''Lon-lat-depth plot''')

        self.ButtonAnimation = tk.Button(self.Labelframe11)
        self.ButtonAnimation.place(relx=0.507, rely=0.71, height=30, width=130
                , bordermode='ignore')
        self.ButtonAnimation.configure(activebackground="#ececec")
        self.ButtonAnimation.configure(activeforeground="#000000")
        self.ButtonAnimation.configure(background="#d9d9d9")
        self.ButtonAnimation.configure(command=app_support.plot_animation_etas_single)
        self.ButtonAnimation.configure(disabledforeground="#a3a3a3")
        self.ButtonAnimation.configure(foreground="#000000")
        self.ButtonAnimation.configure(highlightbackground="#d9d9d9")
        self.ButtonAnimation.configure(highlightcolor="black")
        self.ButtonAnimation.configure(pady="0")
        self.ButtonAnimation.configure(state='disabled')
        self.ButtonAnimation.configure(text='''Animation''')

        self.ButtonExportCsv = tk.Button(self.Labelframe11)
        self.ButtonExportCsv.place(relx=0.693, rely=0.18, height=30, width=120
                , bordermode='ignore')
        self.ButtonExportCsv.configure(activebackground="#ececec")
        self.ButtonExportCsv.configure(activeforeground="#000000")
        self.ButtonExportCsv.configure(background="#d9d9d9")
        self.ButtonExportCsv.configure(command=app_support.export_csv_etas_single)
        self.ButtonExportCsv.configure(disabledforeground="#a3a3a3")
        self.ButtonExportCsv.configure(foreground="#000000")
        self.ButtonExportCsv.configure(highlightbackground="#d9d9d9")
        self.ButtonExportCsv.configure(highlightcolor="black")
        self.ButtonExportCsv.configure(pady="0")
        self.ButtonExportCsv.configure(state='disabled')
        self.ButtonExportCsv.configure(text='''Export csv file''')

        self.CheckbuttonBasemap3 = tk.Checkbutton(self.Labelframe11)
        self.CheckbuttonBasemap3.place(relx=0.28, rely=0.18, relheight=0.129
                , relwidth=0.213, bordermode='ignore')
        self.CheckbuttonBasemap3.configure(activebackground="#ececec")
        self.CheckbuttonBasemap3.configure(activeforeground="#000000")
        self.CheckbuttonBasemap3.configure(anchor='w')
        self.CheckbuttonBasemap3.configure(background="#d9d9d9")
        self.CheckbuttonBasemap3.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonBasemap3.configure(foreground="#000000")
        self.CheckbuttonBasemap3.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonBasemap3.configure(highlightcolor="black")
        self.CheckbuttonBasemap3.configure(justify='left')
        self.CheckbuttonBasemap3.configure(state='disabled')
        self.CheckbuttonBasemap3.configure(text='''Include Basemap''')
        self.CheckbuttonBasemap3.configure(variable=app_support.include_basemap3)

        self.CheckbuttonExpEtas = tk.Checkbutton(self.Labelframe11)
        self.CheckbuttonExpEtas.place(relx=0.28, rely=0.355, relheight=0.134
                , relwidth=0.213, bordermode='ignore')
        self.CheckbuttonExpEtas.configure(activebackground="#ececec")
        self.CheckbuttonExpEtas.configure(activeforeground="#000000")
        self.CheckbuttonExpEtas.configure(anchor='w')
        self.CheckbuttonExpEtas.configure(background="#d9d9d9")
        self.CheckbuttonExpEtas.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonExpEtas.configure(foreground="#000000")
        self.CheckbuttonExpEtas.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonExpEtas.configure(highlightcolor="black")
        self.CheckbuttonExpEtas.configure(justify='left')
        self.CheckbuttonExpEtas.configure(state='disabled')
        self.CheckbuttonExpEtas.configure(text='''Include exposure''')
        self.CheckbuttonExpEtas.configure(variable=app_support.include_exposure_etas)

        self.CheckbuttonGeomEtas = tk.Checkbutton(self.Labelframe11)
        self.CheckbuttonGeomEtas.place(relx=0.28, rely=0.535, relheight=0.134
                , relwidth=0.213, bordermode='ignore')
        self.CheckbuttonGeomEtas.configure(activebackground="#ececec")
        self.CheckbuttonGeomEtas.configure(activeforeground="#000000")
        self.CheckbuttonGeomEtas.configure(background="#d9d9d9")
        self.CheckbuttonGeomEtas.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonGeomEtas.configure(foreground="#000000")
        self.CheckbuttonGeomEtas.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonGeomEtas.configure(highlightcolor="black")
        self.CheckbuttonGeomEtas.configure(justify='left')
        self.CheckbuttonGeomEtas.configure(state='disabled')
        self.CheckbuttonGeomEtas.configure(text='''Include rupture geometry''')
        self.CheckbuttonGeomEtas.configure(variable=app_support.incldue_geom_etas)

        self.LabelMinMagPlotsEtas1 = tk.Label(self.Labelframe11)
        self.LabelMinMagPlotsEtas1.place(relx=0.04, rely=0.535, height=29
                , width=51, bordermode='ignore')
        self.LabelMinMagPlotsEtas1.configure(activebackground="#f9f9f9")
        self.LabelMinMagPlotsEtas1.configure(activeforeground="black")
        self.LabelMinMagPlotsEtas1.configure(anchor='w')
        self.LabelMinMagPlotsEtas1.configure(background="#d9d9d9")
        self.LabelMinMagPlotsEtas1.configure(disabledforeground="#a3a3a3")
        self.LabelMinMagPlotsEtas1.configure(foreground="#000000")
        self.LabelMinMagPlotsEtas1.configure(highlightbackground="#d9d9d9")
        self.LabelMinMagPlotsEtas1.configure(highlightcolor="black")
        self.LabelMinMagPlotsEtas1.configure(state='disabled')
        self.LabelMinMagPlotsEtas1.configure(text='''Min mag''')

        self.EntryMinMagPlotsEtas1 = tk.Entry(self.Labelframe11)
        self.EntryMinMagPlotsEtas1.place(relx=0.12, rely=0.535, height=30
                , relwidth=0.133, bordermode='ignore')
        self.EntryMinMagPlotsEtas1.configure(background="white")
        self.EntryMinMagPlotsEtas1.configure(disabledforeground="#a3a3a3")
        self.EntryMinMagPlotsEtas1.configure(font="TkFixedFont")
        self.EntryMinMagPlotsEtas1.configure(foreground="#000000")
        self.EntryMinMagPlotsEtas1.configure(highlightbackground="#d9d9d9")
        self.EntryMinMagPlotsEtas1.configure(highlightcolor="black")
        self.EntryMinMagPlotsEtas1.configure(insertbackground="black")
        self.EntryMinMagPlotsEtas1.configure(selectbackground="blue")
        self.EntryMinMagPlotsEtas1.configure(selectforeground="white")
        self.EntryMinMagPlotsEtas1.configure(state='disabled')

        self.LabelSimulIndex = tk.Label(self.Labelframe11)
        self.LabelSimulIndex.place(relx=0.04, rely=0.18, height=28, width=160
                , bordermode='ignore')
        self.LabelSimulIndex.configure(activebackground="#f9f9f9")
        self.LabelSimulIndex.configure(activeforeground="black")
        self.LabelSimulIndex.configure(anchor='w')
        self.LabelSimulIndex.configure(background="#d9d9d9")
        self.LabelSimulIndex.configure(disabledforeground="#a3a3a3")
        self.LabelSimulIndex.configure(foreground="#000000")
        self.LabelSimulIndex.configure(highlightbackground="#d9d9d9")
        self.LabelSimulIndex.configure(highlightcolor="black")
        self.LabelSimulIndex.configure(text='''Simulation index''')

        self.ButtonPlot3DEtas = tk.Button(self.Labelframe11)
        self.ButtonPlot3DEtas.place(relx=0.507, rely=0.535, height=30, width=130
                , bordermode='ignore')
        self.ButtonPlot3DEtas.configure(activebackground="#ececec")
        self.ButtonPlot3DEtas.configure(activeforeground="#000000")
        self.ButtonPlot3DEtas.configure(background="#d9d9d9")
        self.ButtonPlot3DEtas.configure(command=app_support.plot_3d_etas)
        self.ButtonPlot3DEtas.configure(disabledforeground="#a3a3a3")
        self.ButtonPlot3DEtas.configure(foreground="#000000")
        self.ButtonPlot3DEtas.configure(highlightbackground="#d9d9d9")
        self.ButtonPlot3DEtas.configure(highlightcolor="black")
        self.ButtonPlot3DEtas.configure(pady="0")
        self.ButtonPlot3DEtas.configure(state='disabled')
        self.ButtonPlot3DEtas.configure(text='''Plot 3D''')

        self.Labelframe12 = tk.LabelFrame(self.MainEtasPlots)
        self.Labelframe12.place(relx=0.013, rely=0.488, relheight=0.497
                , relwidth=0.982)
        self.Labelframe12.configure(relief='groove')
        self.Labelframe12.configure(foreground="black")
        self.Labelframe12.configure(text='''Bulk''')
        self.Labelframe12.configure(background="#d9d9d9")
        self.Labelframe12.configure(highlightbackground="#d9d9d9")
        self.Labelframe12.configure(highlightcolor="black")

        self.ButtonTimePlot2 = tk.Button(self.Labelframe12)
        self.ButtonTimePlot2.place(relx=0.507, rely=0.123, height=30, width=130
                , bordermode='ignore')
        self.ButtonTimePlot2.configure(activebackground="#ececec")
        self.ButtonTimePlot2.configure(activeforeground="#000000")
        self.ButtonTimePlot2.configure(background="#d9d9d9")
        self.ButtonTimePlot2.configure(command=app_support.plot_time_etas_bulk)
        self.ButtonTimePlot2.configure(disabledforeground="#a3a3a3")
        self.ButtonTimePlot2.configure(foreground="#000000")
        self.ButtonTimePlot2.configure(highlightbackground="#d9d9d9")
        self.ButtonTimePlot2.configure(highlightcolor="black")
        self.ButtonTimePlot2.configure(pady="0")
        self.ButtonTimePlot2.configure(state='disabled')
        self.ButtonTimePlot2.configure(text='''Time plot''')

        self.ButtonSpacePlot2 = tk.Button(self.Labelframe12)
        self.ButtonSpacePlot2.place(relx=0.507, rely=0.285, height=30, width=130
                , bordermode='ignore')
        self.ButtonSpacePlot2.configure(activebackground="#ececec")
        self.ButtonSpacePlot2.configure(activeforeground="#000000")
        self.ButtonSpacePlot2.configure(background="#d9d9d9")
        self.ButtonSpacePlot2.configure(command=app_support.plot_space_etas_bulk)
        self.ButtonSpacePlot2.configure(disabledforeground="#a3a3a3")
        self.ButtonSpacePlot2.configure(foreground="#000000")
        self.ButtonSpacePlot2.configure(highlightbackground="#d9d9d9")
        self.ButtonSpacePlot2.configure(highlightcolor="black")
        self.ButtonSpacePlot2.configure(pady="0")
        self.ButtonSpacePlot2.configure(state='disabled')
        self.ButtonSpacePlot2.configure(text='''Lon-lat-depth contour''')

        self.ButtonExportAllCsv = tk.Button(self.Labelframe12)
        self.ButtonExportAllCsv.place(relx=0.693, rely=0.123, height=30
                , width=130, bordermode='ignore')
        self.ButtonExportAllCsv.configure(activebackground="#ececec")
        self.ButtonExportAllCsv.configure(activeforeground="#000000")
        self.ButtonExportAllCsv.configure(background="#d9d9d9")
        self.ButtonExportAllCsv.configure(command=app_support.export_csv_etas_bulk)
        self.ButtonExportAllCsv.configure(disabledforeground="#a3a3a3")
        self.ButtonExportAllCsv.configure(foreground="#000000")
        self.ButtonExportAllCsv.configure(highlightbackground="#d9d9d9")
        self.ButtonExportAllCsv.configure(highlightcolor="black")
        self.ButtonExportAllCsv.configure(pady="0")
        self.ButtonExportAllCsv.configure(state='disabled')
        self.ButtonExportAllCsv.configure(text='''Export all in csv''')

        self.ButtonLengthPlot = tk.Button(self.Labelframe12)
        self.ButtonLengthPlot.place(relx=0.507, rely=0.451, height=30, width=130
                , bordermode='ignore')
        self.ButtonLengthPlot.configure(activebackground="#ececec")
        self.ButtonLengthPlot.configure(activeforeground="#000000")
        self.ButtonLengthPlot.configure(background="#d9d9d9")
        self.ButtonLengthPlot.configure(command=app_support.plot_length_etas_bulk)
        self.ButtonLengthPlot.configure(disabledforeground="#a3a3a3")
        self.ButtonLengthPlot.configure(foreground="#000000")
        self.ButtonLengthPlot.configure(highlightbackground="#d9d9d9")
        self.ButtonLengthPlot.configure(highlightcolor="black")
        self.ButtonLengthPlot.configure(pady="0")
        self.ButtonLengthPlot.configure(state='disabled')
        self.ButtonLengthPlot.configure(text='''Length distribution''')

        self.CheckbuttonGeomEtas2 = tk.Checkbutton(self.Labelframe12)
        self.CheckbuttonGeomEtas2.place(relx=0.28, rely=0.123, relheight=0.119
                , relwidth=0.213, bordermode='ignore')
        self.CheckbuttonGeomEtas2.configure(activebackground="#ececec")
        self.CheckbuttonGeomEtas2.configure(activeforeground="#000000")
        self.CheckbuttonGeomEtas2.configure(anchor='w')
        self.CheckbuttonGeomEtas2.configure(background="#d9d9d9")
        self.CheckbuttonGeomEtas2.configure(disabledforeground="#a3a3a3")
        self.CheckbuttonGeomEtas2.configure(foreground="#000000")
        self.CheckbuttonGeomEtas2.configure(highlightbackground="#d9d9d9")
        self.CheckbuttonGeomEtas2.configure(highlightcolor="black")
        self.CheckbuttonGeomEtas2.configure(justify='left')
        self.CheckbuttonGeomEtas2.configure(state='disabled')
        self.CheckbuttonGeomEtas2.configure(text='''Include exposure''')
        self.CheckbuttonGeomEtas2.configure(variable=app_support.include_exposure_etas2)

        self.ButtonAnimation2 = tk.Button(self.Labelframe12)
        self.ButtonAnimation2.place(relx=0.507, rely=0.613, height=30, width=130
                , bordermode='ignore')
        self.ButtonAnimation2.configure(activebackground="#ececec")
        self.ButtonAnimation2.configure(activeforeground="#000000")
        self.ButtonAnimation2.configure(background="#d9d9d9")
        self.ButtonAnimation2.configure(command=app_support.plot_animation_etas_bulk)
        self.ButtonAnimation2.configure(disabledforeground="#a3a3a3")
        self.ButtonAnimation2.configure(foreground="#000000")
        self.ButtonAnimation2.configure(highlightbackground="#d9d9d9")
        self.ButtonAnimation2.configure(highlightcolor="black")
        self.ButtonAnimation2.configure(pady="0")
        self.ButtonAnimation2.configure(state='disabled')
        self.ButtonAnimation2.configure(text='''Animation''')

        self.LabelMinMagPlotsEtas2 = tk.Label(self.Labelframe12)
        self.LabelMinMagPlotsEtas2.place(relx=0.04, rely=0.123, height=28
                , width=51, bordermode='ignore')
        self.LabelMinMagPlotsEtas2.configure(activebackground="#f9f9f9")
        self.LabelMinMagPlotsEtas2.configure(activeforeground="black")
        self.LabelMinMagPlotsEtas2.configure(anchor='w')
        self.LabelMinMagPlotsEtas2.configure(background="#d9d9d9")
        self.LabelMinMagPlotsEtas2.configure(disabledforeground="#a3a3a3")
        self.LabelMinMagPlotsEtas2.configure(foreground="#000000")
        self.LabelMinMagPlotsEtas2.configure(highlightbackground="#d9d9d9")
        self.LabelMinMagPlotsEtas2.configure(highlightcolor="black")
        self.LabelMinMagPlotsEtas2.configure(state='disabled')
        self.LabelMinMagPlotsEtas2.configure(text='''Min mag''')

        self.EntryMinMagPlotsEtas2 = tk.Entry(self.Labelframe12)
        self.EntryMinMagPlotsEtas2.place(relx=0.12, rely=0.123, height=30
                , relwidth=0.133, bordermode='ignore')
        self.EntryMinMagPlotsEtas2.configure(background="white")
        self.EntryMinMagPlotsEtas2.configure(disabledforeground="#a3a3a3")
        self.EntryMinMagPlotsEtas2.configure(font="TkFixedFont")
        self.EntryMinMagPlotsEtas2.configure(foreground="#000000")
        self.EntryMinMagPlotsEtas2.configure(highlightbackground="#d9d9d9")
        self.EntryMinMagPlotsEtas2.configure(highlightcolor="black")
        self.EntryMinMagPlotsEtas2.configure(insertbackground="black")
        self.EntryMinMagPlotsEtas2.configure(selectbackground="blue")
        self.EntryMinMagPlotsEtas2.configure(selectforeground="white")
        self.EntryMinMagPlotsEtas2.configure(state='disabled')

        self.Labelframe13 = tk.LabelFrame(self.MainGMM)
        self.Labelframe13.place(relx=0.013, rely=0.019, relheight=0.945
                , relwidth=0.471)
        self.Labelframe13.configure(relief='groove')
        self.Labelframe13.configure(foreground="black")
        self.Labelframe13.configure(text='''Input for GMM''')
        self.Labelframe13.configure(background="#d9d9d9")
        self.Labelframe13.configure(highlightbackground="#d9d9d9")
        self.Labelframe13.configure(highlightcolor="black")

        self.Label1 = tk.Label(self.Labelframe13)
        self.Label1.place(relx=0.083, rely=0.085, height=20, width=50
                , bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Vs30''')

        self.Label2 = tk.Label(self.Labelframe13)
        self.Label2.place(relx=0.083, rely=0.15, height=20, width=50
                , bordermode='ignore')
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''z1.0''')

        self.Label3 = tk.Label(self.Labelframe13)
        self.Label3.place(relx=0.083, rely=0.215, height=19, width=50
                , bordermode='ignore')
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''z2.5''')

        self.Label4 = tk.Label(self.Labelframe13)
        self.Label4.place(relx=0.083, rely=0.322, height=20, width=50
                , bordermode='ignore')
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(anchor='w')
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''GMM''')

        self.Label5 = tk.Label(self.Labelframe13)
        self.Label5.place(relx=0.083, rely=0.732, height=19, width=160
                , bordermode='ignore')
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(anchor='w')
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''Truncation level''')

        self.Label6 = tk.Label(self.Labelframe13)
        self.Label6.place(relx=0.083, rely=0.796, height=19, width=160
                , bordermode='ignore')
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(anchor='w')
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''Max site-to-source distance''')

        self.ScrolledtreeviewGmm = ScrolledTreeView(self.Labelframe13)
        self.ScrolledtreeviewGmm.place(relx=0.083, rely=0.472, relheight=0.23
                , relwidth=0.833, bordermode='ignore')
        self.ScrolledtreeviewGmm.configure(columns="Col1 Col2")
        # build_treeview_support starting.
        self.ScrolledtreeviewGmm.heading("#0",text="Id")
        self.ScrolledtreeviewGmm.heading("#0",anchor="center")
        self.ScrolledtreeviewGmm.column("#0",width="27")
        self.ScrolledtreeviewGmm.column("#0",minwidth="20")
        self.ScrolledtreeviewGmm.column("#0",stretch="1")
        self.ScrolledtreeviewGmm.column("#0",anchor="w")
        self.ScrolledtreeviewGmm.heading("Col1",text="Weight")
        self.ScrolledtreeviewGmm.heading("Col1",anchor="center")
        self.ScrolledtreeviewGmm.column("Col1",width="127")
        self.ScrolledtreeviewGmm.column("Col1",minwidth="20")
        self.ScrolledtreeviewGmm.column("Col1",stretch="1")
        self.ScrolledtreeviewGmm.column("Col1",anchor="w")
        self.ScrolledtreeviewGmm.heading("Col2",text="GMM")
        self.ScrolledtreeviewGmm.heading("Col2",anchor="center")
        self.ScrolledtreeviewGmm.column("Col2",width="127")
        self.ScrolledtreeviewGmm.column("Col2",minwidth="20")
        self.ScrolledtreeviewGmm.column("Col2",stretch="1")
        self.ScrolledtreeviewGmm.column("Col2",anchor="w")

        self.Label7 = tk.Label(self.Labelframe13)
        self.Label7.place(relx=0.611, rely=0.322, height=20, width=50
                , bordermode='ignore')
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(anchor='w')
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''Weight''')

        self.TComboboxAvailabGMM = ttk.Combobox(self.Labelframe13)
        self.TComboboxAvailabGMM.place(relx=0.222, rely=0.322, relheight=0.045
                , relwidth=0.333, bordermode='ignore')
        self.TComboboxAvailabGMM.configure(textvariable=app_support.combobox_available_gmm)
        self.TComboboxAvailabGMM.configure(takefocus="")

        self.Entry1 = tk.Entry(self.Labelframe13)
        self.Entry1.place(relx=0.222, rely=0.085, height=20, relwidth=0.139
                , bordermode='ignore')
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(highlightbackground="#d9d9d9")
        self.Entry1.configure(highlightcolor="black")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(selectbackground="blue")
        self.Entry1.configure(selectforeground="white")

        self.Entry2 = tk.Entry(self.Labelframe13)
        self.Entry2.place(relx=0.222, rely=0.15, height=20, relwidth=0.139
                , bordermode='ignore')
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(highlightbackground="#d9d9d9")
        self.Entry2.configure(highlightcolor="black")
        self.Entry2.configure(insertbackground="black")
        self.Entry2.configure(selectbackground="blue")
        self.Entry2.configure(selectforeground="white")

        self.Entry3 = tk.Entry(self.Labelframe13)
        self.Entry3.place(relx=0.222, rely=0.215, height=20, relwidth=0.139
                , bordermode='ignore')
        self.Entry3.configure(background="white")
        self.Entry3.configure(disabledforeground="#a3a3a3")
        self.Entry3.configure(font="TkFixedFont")
        self.Entry3.configure(foreground="#000000")
        self.Entry3.configure(highlightbackground="#d9d9d9")
        self.Entry3.configure(highlightcolor="black")
        self.Entry3.configure(insertbackground="black")
        self.Entry3.configure(selectbackground="blue")
        self.Entry3.configure(selectforeground="white")

        self.Entry4 = tk.Entry(self.Labelframe13)
        self.Entry4.place(relx=0.75, rely=0.322, height=20, relwidth=0.139
                , bordermode='ignore')
        self.Entry4.configure(background="white")
        self.Entry4.configure(disabledforeground="#a3a3a3")
        self.Entry4.configure(font="TkFixedFont")
        self.Entry4.configure(foreground="#000000")
        self.Entry4.configure(highlightbackground="#d9d9d9")
        self.Entry4.configure(highlightcolor="black")
        self.Entry4.configure(insertbackground="black")
        self.Entry4.configure(selectbackground="blue")
        self.Entry4.configure(selectforeground="white")

        self.Entry5 = tk.Entry(self.Labelframe13)
        self.Entry5.place(relx=0.556, rely=0.732, height=20, relwidth=0.233
                , bordermode='ignore')
        self.Entry5.configure(background="white")
        self.Entry5.configure(disabledforeground="#a3a3a3")
        self.Entry5.configure(font="TkFixedFont")
        self.Entry5.configure(foreground="#000000")
        self.Entry5.configure(highlightbackground="#d9d9d9")
        self.Entry5.configure(highlightcolor="black")
        self.Entry5.configure(insertbackground="black")
        self.Entry5.configure(selectbackground="blue")
        self.Entry5.configure(selectforeground="white")

        self.Entry6 = tk.Entry(self.Labelframe13)
        self.Entry6.place(relx=0.556, rely=0.796, height=20, relwidth=0.233
                , bordermode='ignore')
        self.Entry6.configure(background="white")
        self.Entry6.configure(disabledforeground="#a3a3a3")
        self.Entry6.configure(font="TkFixedFont")
        self.Entry6.configure(foreground="#000000")
        self.Entry6.configure(highlightbackground="#d9d9d9")
        self.Entry6.configure(highlightcolor="black")
        self.Entry6.configure(insertbackground="black")
        self.Entry6.configure(selectbackground="blue")
        self.Entry6.configure(selectforeground="white")

        self.ButtonAddGmm = tk.Button(self.Labelframe13)
        self.ButtonAddGmm.place(relx=0.139, rely=0.387, height=30, width=50
                , bordermode='ignore')
        self.ButtonAddGmm.configure(activebackground="#ececec")
        self.ButtonAddGmm.configure(activeforeground="#000000")
        self.ButtonAddGmm.configure(background="#d9d9d9")
        self.ButtonAddGmm.configure(command=app_support.add_gmm)
        self.ButtonAddGmm.configure(disabledforeground="#a3a3a3")
        self.ButtonAddGmm.configure(foreground="#000000")
        self.ButtonAddGmm.configure(highlightbackground="#d9d9d9")
        self.ButtonAddGmm.configure(highlightcolor="black")
        self.ButtonAddGmm.configure(pady="0")
        self.ButtonAddGmm.configure(text='''Add''')

        self.ButtonDelete = tk.Button(self.Labelframe13)
        self.ButtonDelete.place(relx=0.306, rely=0.387, height=30, width=50
                , bordermode='ignore')
        self.ButtonDelete.configure(activebackground="#ececec")
        self.ButtonDelete.configure(activeforeground="#000000")
        self.ButtonDelete.configure(background="#d9d9d9")
        self.ButtonDelete.configure(command=app_support.delete_selected_gmm)
        self.ButtonDelete.configure(disabledforeground="#a3a3a3")
        self.ButtonDelete.configure(foreground="#000000")
        self.ButtonDelete.configure(highlightbackground="#d9d9d9")
        self.ButtonDelete.configure(highlightcolor="black")
        self.ButtonDelete.configure(pady="0")
        self.ButtonDelete.configure(text='''Delete''')

        self.ButtonDeleteAllGmm = tk.Button(self.Labelframe13)
        self.ButtonDeleteAllGmm.place(relx=0.472, rely=0.387, height=30, width=70
                , bordermode='ignore')
        self.ButtonDeleteAllGmm.configure(activebackground="#ececec")
        self.ButtonDeleteAllGmm.configure(activeforeground="#000000")
        self.ButtonDeleteAllGmm.configure(background="#d9d9d9")
        self.ButtonDeleteAllGmm.configure(command=app_support.delete_all_gmm)
        self.ButtonDeleteAllGmm.configure(disabledforeground="#a3a3a3")
        self.ButtonDeleteAllGmm.configure(foreground="#000000")
        self.ButtonDeleteAllGmm.configure(highlightbackground="#d9d9d9")
        self.ButtonDeleteAllGmm.configure(highlightcolor="black")
        self.ButtonDeleteAllGmm.configure(pady="0")
        self.ButtonDeleteAllGmm.configure(text='''Delete all''')

        self.ButtonUploadCsvGmm = tk.Button(self.Labelframe13)
        self.ButtonUploadCsvGmm.place(relx=0.694, rely=0.387, height=30, width=70
                , bordermode='ignore')
        self.ButtonUploadCsvGmm.configure(activebackground="#ececec")
        self.ButtonUploadCsvGmm.configure(activeforeground="#000000")
        self.ButtonUploadCsvGmm.configure(background="#d9d9d9")
        self.ButtonUploadCsvGmm.configure(command=app_support.upload_csv_gmm)
        self.ButtonUploadCsvGmm.configure(disabledforeground="#a3a3a3")
        self.ButtonUploadCsvGmm.configure(foreground="#000000")
        self.ButtonUploadCsvGmm.configure(highlightbackground="#d9d9d9")
        self.ButtonUploadCsvGmm.configure(highlightcolor="black")
        self.ButtonUploadCsvGmm.configure(pady="0")
        self.ButtonUploadCsvGmm.configure(text='''From csv''')

        self.ButtonBuildGmm = tk.Button(self.Labelframe13)
        self.ButtonBuildGmm.place(relx=0.389, rely=0.881, height=30, width=70
                , bordermode='ignore')
        self.ButtonBuildGmm.configure(activebackground="#ececec")
        self.ButtonBuildGmm.configure(activeforeground="#000000")
        self.ButtonBuildGmm.configure(background="#d9d9d9")
        self.ButtonBuildGmm.configure(command=app_support.build_gmm)
        self.ButtonBuildGmm.configure(disabledforeground="#a3a3a3")
        self.ButtonBuildGmm.configure(foreground="#000000")
        self.ButtonBuildGmm.configure(highlightbackground="#d9d9d9")
        self.ButtonBuildGmm.configure(highlightcolor="black")
        self.ButtonBuildGmm.configure(pady="0")
        self.ButtonBuildGmm.configure(text='''Build GMM''')

        self.Labelframe14 = tk.LabelFrame(self.MainGMM)
        self.Labelframe14.place(relx=0.497, rely=0.019, relheight=0.945
                , relwidth=0.483)
        self.Labelframe14.configure(relief='groove')
        self.Labelframe14.configure(foreground="black")
        self.Labelframe14.configure(text='''Plot GMM''')
        self.Labelframe14.configure(background="#d9d9d9")
        self.Labelframe14.configure(highlightbackground="#d9d9d9")
        self.Labelframe14.configure(highlightcolor="black")

        self.Label8 = tk.Label(self.Labelframe14)
        self.Label8.place(relx=0.081, rely=0.085, height=20, width=130
                , bordermode='ignore')
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(anchor='w')
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#d9d9d9")
        self.Label8.configure(highlightcolor="black")
        self.Label8.configure(text='''Simulation index''')

        self.Label9 = tk.Label(self.Labelframe14)
        self.Label9.place(relx=0.081, rely=0.172, height=19, width=130
                , bordermode='ignore')
        self.Label9.configure(activebackground="#f9f9f9")
        self.Label9.configure(activeforeground="black")
        self.Label9.configure(anchor='w')
        self.Label9.configure(background="#d9d9d9")
        self.Label9.configure(disabledforeground="#a3a3a3")
        self.Label9.configure(foreground="#000000")
        self.Label9.configure(highlightbackground="#d9d9d9")
        self.Label9.configure(highlightcolor="black")
        self.Label9.configure(text='''Event index''')

        self.Label10 = tk.Label(self.Labelframe14)
        self.Label10.place(relx=0.081, rely=0.257, height=20, width=130
                , bordermode='ignore')
        self.Label10.configure(activebackground="#f9f9f9")
        self.Label10.configure(activeforeground="black")
        self.Label10.configure(anchor='w')
        self.Label10.configure(background="#d9d9d9")
        self.Label10.configure(disabledforeground="#a3a3a3")
        self.Label10.configure(foreground="#000000")
        self.Label10.configure(highlightbackground="#d9d9d9")
        self.Label10.configure(highlightcolor="black")
        self.Label10.configure(text='''Intensity measure type''')

        self.TComboboxSimulIdGmm = ttk.Combobox(self.Labelframe14)
        self.TComboboxSimulIdGmm.place(relx=0.488, rely=0.085, relheight=0.047
                , relwidth=0.388, bordermode='ignore')
        self.TComboboxSimulIdGmm.configure(textvariable=app_support.combobox_simul_id_gmm)
        self.TComboboxSimulIdGmm.configure(takefocus="")

        self.TComboboxEventIdGmm = ttk.Combobox(self.Labelframe14)
        self.TComboboxEventIdGmm.place(relx=0.488, rely=0.172, relheight=0.043
                , relwidth=0.388, bordermode='ignore')
        self.TComboboxEventIdGmm.configure(textvariable=app_support.combobox_event_id_gmm)
        self.TComboboxEventIdGmm.configure(takefocus="")

        self.TComboboxImtGmm = ttk.Combobox(self.Labelframe14)
        self.TComboboxImtGmm.place(relx=0.488, rely=0.257, relheight=0.045
                , relwidth=0.388, bordermode='ignore')
        self.TComboboxImtGmm.configure(textvariable=app_support.combobox_imt_gmm)
        self.TComboboxImtGmm.configure(takefocus="")

        self.ButtonPlotGmm = tk.Button(self.Labelframe14)
        self.ButtonPlotGmm.place(relx=0.407, rely=0.367, height=30, width=70
                , bordermode='ignore')
        self.ButtonPlotGmm.configure(activebackground="#ececec")
        self.ButtonPlotGmm.configure(activeforeground="#000000")
        self.ButtonPlotGmm.configure(background="#d9d9d9")
        self.ButtonPlotGmm.configure(command=app_support.plot_gmm)
        self.ButtonPlotGmm.configure(disabledforeground="#a3a3a3")
        self.ButtonPlotGmm.configure(foreground="#000000")
        self.ButtonPlotGmm.configure(highlightbackground="#d9d9d9")
        self.ButtonPlotGmm.configure(highlightcolor="black")
        self.ButtonPlotGmm.configure(pady="0")
        self.ButtonPlotGmm.configure(text='''Plot''')

        self.Labelframe15 = tk.LabelFrame(self.MainVulnerability)
        self.Labelframe15.place(relx=0.013, rely=0.021, relheight=0.964
                , relwidth=0.975)
        self.Labelframe15.configure(relief='groove')
        self.Labelframe15.configure(foreground="black")
        self.Labelframe15.configure(background="#d9d9d9")
        self.Labelframe15.configure(highlightbackground="#d9d9d9")
        self.Labelframe15.configure(highlightcolor="black")

        self.ScrolledtreeviewVulnerabilityRels = ScrolledTreeView(self.Labelframe15)
        self.ScrolledtreeviewVulnerabilityRels.place(relx=0.04, rely=0.088
                , relheight=0.235, relwidth=0.928, bordermode='ignore')
        self.ScrolledtreeviewVulnerabilityRels.configure(columns="Col1 Col2 Col3")
        # build_treeview_support starting.
        self.ScrolledtreeviewVulnerabilityRels.heading("#0",text="Id")
        self.ScrolledtreeviewVulnerabilityRels.heading("#0",anchor="center")
        self.ScrolledtreeviewVulnerabilityRels.column("#0",width="20")
        self.ScrolledtreeviewVulnerabilityRels.column("#0",minwidth="20")
        self.ScrolledtreeviewVulnerabilityRels.column("#0",stretch="1")
        self.ScrolledtreeviewVulnerabilityRels.column("#0",anchor="w")
        self.ScrolledtreeviewVulnerabilityRels.heading("Col1",text="Taxonomy Id")
        self.ScrolledtreeviewVulnerabilityRels.heading("Col1",anchor="center")
        self.ScrolledtreeviewVulnerabilityRels.column("Col1",width="120")
        self.ScrolledtreeviewVulnerabilityRels.column("Col1",minwidth="20")
        self.ScrolledtreeviewVulnerabilityRels.column("Col1",stretch="1")
        self.ScrolledtreeviewVulnerabilityRels.column("Col1",anchor="w")
        self.ScrolledtreeviewVulnerabilityRels.heading("Col2",text="IMT")
        self.ScrolledtreeviewVulnerabilityRels.heading("Col2",anchor="center")
        self.ScrolledtreeviewVulnerabilityRels.column("Col2",width="100")
        self.ScrolledtreeviewVulnerabilityRels.column("Col2",minwidth="20")
        self.ScrolledtreeviewVulnerabilityRels.column("Col2",stretch="1")
        self.ScrolledtreeviewVulnerabilityRels.column("Col2",anchor="w")
        self.ScrolledtreeviewVulnerabilityRels.heading("Col3",text="Type")
        self.ScrolledtreeviewVulnerabilityRels.heading("Col3",anchor="center")
        self.ScrolledtreeviewVulnerabilityRels.column("Col3",width="160")
        self.ScrolledtreeviewVulnerabilityRels.column("Col3",minwidth="20")
        self.ScrolledtreeviewVulnerabilityRels.column("Col3",stretch="1")
        self.ScrolledtreeviewVulnerabilityRels.column("Col3",anchor="w")

        self.Label11 = tk.Label(self.Labelframe15)
        self.Label11.place(relx=0.148, rely=0.504, height=30, width=149
                , bordermode='ignore')
        self.Label11.configure(anchor='w')
        self.Label11.configure(background="#d9d9d9")
        self.Label11.configure(disabledforeground="#a3a3a3")
        self.Label11.configure(foreground="#000000")
        self.Label11.configure(text='''Taxonomy Id''')

        self.Label12 = tk.Label(self.Labelframe15)
        self.Label12.place(relx=0.148, rely=0.68, height=30, width=149
                , bordermode='ignore')
        self.Label12.configure(anchor='w')
        self.Label12.configure(background="#d9d9d9")
        self.Label12.configure(disabledforeground="#a3a3a3")
        self.Label12.configure(foreground="#000000")
        self.Label12.configure(text='''Vulnerability type''')

        self.Button1 = tk.Button(self.Labelframe15)
        self.Button1.place(relx=0.51, rely=0.504, height=30, width=170
                , bordermode='ignore')
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''DI vulnerability curve csv''')

        self.Button2 = tk.Button(self.Labelframe15)
        self.Button2.place(relx=0.752, rely=0.592, height=30, width=70
                , bordermode='ignore')
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Submit''')

        self.Button3 = tk.Button(self.Labelframe15)
        self.Button3.place(relx=0.43, rely=0.373, height=30, width=100
                , bordermode='ignore')
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''Delete selected''')

        self.Button4 = tk.Button(self.Labelframe15)
        self.Button4.place(relx=0.577, rely=0.373, height=30, width=100
                , bordermode='ignore')
        self.Button4.configure(activebackground="#ececec")
        self.Button4.configure(activeforeground="#000000")
        self.Button4.configure(background="#d9d9d9")
        self.Button4.configure(disabledforeground="#a3a3a3")
        self.Button4.configure(foreground="#000000")
        self.Button4.configure(highlightbackground="#d9d9d9")
        self.Button4.configure(highlightcolor="black")
        self.Button4.configure(pady="0")
        self.Button4.configure(text='''Delete all''')

        self.Button5 = tk.Button(self.Labelframe15)
        self.Button5.place(relx=0.752, rely=0.504, height=30, width=70
                , bordermode='ignore')
        self.Button5.configure(activebackground="#ececec")
        self.Button5.configure(activeforeground="#000000")
        self.Button5.configure(background="#d9d9d9")
        self.Button5.configure(disabledforeground="#a3a3a3")
        self.Button5.configure(foreground="#000000")
        self.Button5.configure(highlightbackground="#d9d9d9")
        self.Button5.configure(highlightcolor="black")
        self.Button5.configure(pady="0")
        self.Button5.configure(text='''Plot''')

        self.Entry7 = tk.Entry(self.Labelframe15)
        self.Entry7.place(relx=0.362, rely=0.504, height=30, relwidth=0.134
                , bordermode='ignore')
        self.Entry7.configure(background="white")
        self.Entry7.configure(disabledforeground="#a3a3a3")
        self.Entry7.configure(font="TkFixedFont")
        self.Entry7.configure(foreground="#000000")
        self.Entry7.configure(insertbackground="black")
        self.Entry7.configure(state='readonly')

        self.TCombobox1 = ttk.Combobox(self.Labelframe15)
        self.TCombobox1.place(relx=0.362, rely=0.68, relheight=0.066
                , relwidth=0.133, bordermode='ignore')
        self.value_list = ['Damage-independent','Damage-dependent surface','Damage-dependent vuln+frag',]
        self.TCombobox1.configure(values=self.value_list)
        self.TCombobox1.configure(textvariable=app_support.combobox)
        self.TCombobox1.configure(takefocus="")

        self.Button6 = tk.Button(self.Labelframe15)
        self.Button6.place(relx=0.282, rely=0.373, height=30, width=100
                , bordermode='ignore')
        self.Button6.configure(activebackground="#ececec")
        self.Button6.configure(activeforeground="#000000")
        self.Button6.configure(background="#d9d9d9")
        self.Button6.configure(disabledforeground="#a3a3a3")
        self.Button6.configure(foreground="#000000")
        self.Button6.configure(highlightbackground="#d9d9d9")
        self.Button6.configure(highlightcolor="black")
        self.Button6.configure(pady="0")
        self.Button6.configure(text='''Modify''')

        self.Label13 = tk.Label(self.Labelframe15)
        self.Label13.place(relx=0.148, rely=0.592, height=30, width=150
                , bordermode='ignore')
        self.Label13.configure(background="#d9d9d9")
        self.Label13.configure(disabledforeground="#a3a3a3")
        self.Label13.configure(foreground="#000000")
        self.Label13.configure(text='''Intensity measure type (IMT)''')

        self.Entry8 = tk.Entry(self.Labelframe15)
        self.Entry8.place(relx=0.362, rely=0.592, height=30, relwidth=0.134
                , bordermode='ignore')
        self.Entry8.configure(background="white")
        self.Entry8.configure(disabledforeground="#a3a3a3")
        self.Entry8.configure(font="TkFixedFont")
        self.Entry8.configure(foreground="#000000")
        self.Entry8.configure(insertbackground="black")

        self.Button11 = tk.Button(self.Labelframe15)
        self.Button11.place(relx=0.51, rely=0.768, height=30, width=170
                , bordermode='ignore')
        self.Button11.configure(activebackground="#ececec")
        self.Button11.configure(activeforeground="#000000")
        self.Button11.configure(background="#d9d9d9")
        self.Button11.configure(disabledforeground="#a3a3a3")
        self.Button11.configure(foreground="#000000")
        self.Button11.configure(highlightbackground="#d9d9d9")
        self.Button11.configure(highlightcolor="black")
        self.Button11.configure(pady="0")
        self.Button11.configure(state='disabled')
        self.Button11.configure(text='''DD fragility curves csv''')

        self.Button12 = tk.Button(self.Labelframe15)
        self.Button12.place(relx=0.51, rely=0.592, height=30, width=170
                , bordermode='ignore')
        self.Button12.configure(activebackground="#ececec")
        self.Button12.configure(activeforeground="#000000")
        self.Button12.configure(background="#d9d9d9")
        self.Button12.configure(disabledforeground="#a3a3a3")
        self.Button12.configure(foreground="#000000")
        self.Button12.configure(highlightbackground="#d9d9d9")
        self.Button12.configure(highlightcolor="black")
        self.Button12.configure(pady="0")
        self.Button12.configure(text='''DD vulnerability surface csv''')

        self.Button13 = tk.Button(self.Labelframe15)
        self.Button13.place(relx=0.51, rely=0.68, height=30, width=170
                , bordermode='ignore')
        self.Button13.configure(activebackground="#ececec")
        self.Button13.configure(activeforeground="#000000")
        self.Button13.configure(background="#d9d9d9")
        self.Button13.configure(disabledforeground="#a3a3a3")
        self.Button13.configure(foreground="#000000")
        self.Button13.configure(highlightbackground="#d9d9d9")
        self.Button13.configure(highlightcolor="black")
        self.Button13.configure(pady="0")
        self.Button13.configure(text='''DD vulnerability curves csv''')

        self.Labelframe16 = tk.LabelFrame(self.MainLoss)
        self.Labelframe16.place(relx=0.013, rely=0.042, relheight=0.254
                , relwidth=0.314)
        self.Labelframe16.configure(relief='groove')
        self.Labelframe16.configure(foreground="black")
        self.Labelframe16.configure(background="#d9d9d9")

        self.Label14 = tk.Label(self.Labelframe16)
        self.Label14.place(relx=0.083, rely=0.167, height=30, width=120
                , bordermode='ignore')
        self.Label14.configure(background="#d9d9d9")
        self.Label14.configure(disabledforeground="#a3a3a3")
        self.Label14.configure(foreground="#000000")
        self.Label14.configure(text='''Recovery time (yr)''')

        self.Entry9 = tk.Entry(self.Labelframe16)
        self.Entry9.place(relx=0.583, rely=0.167, height=30, relwidth=0.292
                , bordermode='ignore')
        self.Entry9.configure(background="white")
        self.Entry9.configure(disabledforeground="#a3a3a3")
        self.Entry9.configure(font="TkFixedFont")
        self.Entry9.configure(foreground="#000000")
        self.Entry9.configure(insertbackground="black")

        self.Button7 = tk.Button(self.Labelframe16)
        self.Button7.place(relx=0.208, rely=0.583, height=30, width=130
                , bordermode='ignore')
        self.Button7.configure(activebackground="#ececec")
        self.Button7.configure(activeforeground="#000000")
        self.Button7.configure(background="#d9d9d9")
        self.Button7.configure(disabledforeground="#a3a3a3")
        self.Button7.configure(foreground="#000000")
        self.Button7.configure(highlightbackground="#d9d9d9")
        self.Button7.configure(highlightcolor="black")
        self.Button7.configure(pady="0")
        self.Button7.configure(text='''Calculate loss ratios''')

        self.Labelframe17 = tk.LabelFrame(self.MainLoss)
        self.Labelframe17.place(relx=0.013, rely=0.317, relheight=0.338
                , relwidth=0.315)
        self.Labelframe17.configure(relief='groove')
        self.Labelframe17.configure(foreground="black")
        self.Labelframe17.configure(text='''Plot single event loss ratio distribution''')
        self.Labelframe17.configure(background="#d9d9d9")

        self.Label15 = tk.Label(self.Labelframe17)
        self.Label15.place(relx=0.083, rely=0.188, height=30, width=90
                , bordermode='ignore')
        self.Label15.configure(anchor='w')
        self.Label15.configure(background="#d9d9d9")
        self.Label15.configure(disabledforeground="#a3a3a3")
        self.Label15.configure(foreground="#000000")
        self.Label15.configure(text='''Simulation Id''')

        self.Label16 = tk.Label(self.Labelframe17)
        self.Label16.place(relx=0.083, rely=0.438, height=30, width=100
                , bordermode='ignore')
        self.Label16.configure(anchor='w')
        self.Label16.configure(background="#d9d9d9")
        self.Label16.configure(disabledforeground="#a3a3a3")
        self.Label16.configure(foreground="#000000")
        self.Label16.configure(text='''Event Id''')

        self.Button8 = tk.Button(self.Labelframe17)
        self.Button8.place(relx=0.332, rely=0.688, height=30, width=70
                , bordermode='ignore')
        self.Button8.configure(activebackground="#ececec")
        self.Button8.configure(activeforeground="#000000")
        self.Button8.configure(background="#d9d9d9")
        self.Button8.configure(disabledforeground="#a3a3a3")
        self.Button8.configure(foreground="#000000")
        self.Button8.configure(highlightbackground="#d9d9d9")
        self.Button8.configure(highlightcolor="black")
        self.Button8.configure(pady="0")
        self.Button8.configure(text='''Plot''')

        self.TCombobox2 = ttk.Combobox(self.Labelframe17)
        self.TCombobox2.place(relx=0.456, rely=0.188, relheight=0.188
                , relwidth=0.415, bordermode='ignore')
        self.TCombobox2.configure(textvariable=app_support.combobox)
        self.TCombobox2.configure(takefocus="")

        self.TCombobox3 = ttk.Combobox(self.Labelframe17)
        self.TCombobox3.place(relx=0.456, rely=0.438, relheight=0.188
                , relwidth=0.415, bordermode='ignore')
        self.TCombobox3.configure(textvariable=app_support.combobox)
        self.TCombobox3.configure(takefocus="")

        self.Labelframe18 = tk.LabelFrame(self.MainLoss)
        self.Labelframe18.place(relx=0.34, rely=0.317, relheight=0.338
                , relwidth=0.314)
        self.Labelframe18.configure(relief='groove')
        self.Labelframe18.configure(foreground="black")
        self.Labelframe18.configure(text='''Plot single simulation loss ratio distribution''')
        self.Labelframe18.configure(background="#d9d9d9")

        self.Label17 = tk.Label(self.Labelframe18)
        self.Label17.place(relx=0.083, rely=0.25, height=30, width=90
                , bordermode='ignore')
        self.Label17.configure(anchor='w')
        self.Label17.configure(background="#d9d9d9")
        self.Label17.configure(disabledforeground="#a3a3a3")
        self.Label17.configure(foreground="#000000")
        self.Label17.configure(text='''Simulation Id''')

        self.TCombobox4 = ttk.Combobox(self.Labelframe18)
        self.TCombobox4.place(relx=0.458, rely=0.25, relheight=0.188
                , relwidth=0.417, bordermode='ignore')
        self.TCombobox4.configure(textvariable=app_support.combobox)
        self.TCombobox4.configure(takefocus="")

        self.Button9 = tk.Button(self.Labelframe18)
        self.Button9.place(relx=0.333, rely=0.625, height=30, width=80
                , bordermode='ignore')
        self.Button9.configure(activebackground="#ececec")
        self.Button9.configure(activeforeground="#000000")
        self.Button9.configure(background="#d9d9d9")
        self.Button9.configure(disabledforeground="#a3a3a3")
        self.Button9.configure(foreground="#000000")
        self.Button9.configure(highlightbackground="#d9d9d9")
        self.Button9.configure(highlightcolor="black")
        self.Button9.configure(pady="0")
        self.Button9.configure(text='''Plot''')

        self.Labelframe19 = tk.LabelFrame(self.MainLoss)
        self.Labelframe19.place(relx=0.668, rely=0.317, relheight=0.338
                , relwidth=0.314)
        self.Labelframe19.configure(relief='groove')
        self.Labelframe19.configure(foreground="black")
        self.Labelframe19.configure(text='''Plot total loss ratio distribution''')
        self.Labelframe19.configure(background="#d9d9d9")

        self.Button10 = tk.Button(self.Labelframe19)
        self.Button10.place(relx=0.333, rely=0.438, height=30, width=80
                , bordermode='ignore')
        self.Button10.configure(activebackground="#ececec")
        self.Button10.configure(activeforeground="#000000")
        self.Button10.configure(background="#d9d9d9")
        self.Button10.configure(disabledforeground="#a3a3a3")
        self.Button10.configure(foreground="#000000")
        self.Button10.configure(highlightbackground="#d9d9d9")
        self.Button10.configure(highlightcolor="black")
        self.Button10.configure(pady="0")
        self.Button10.configure(text='''Plot''')

# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''
    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))
        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')
        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)
        # Copy geometry methods of master  (taken from ScrolledText.py)
        if py3:
            methods = tk.Pack.__dict__.keys() | tk.Grid.__dict__.keys() \
                  | tk.Place.__dict__.keys()
        else:
            methods = tk.Pack.__dict__.keys() + tk.Grid.__dict__.keys() \
                  + tk.Place.__dict__.keys()
        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''
        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)
        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''
    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        container.bind('<Enter>', lambda e: _bound_to_mousewheel(e, container))
        container.bind('<Leave>', lambda e: _unbound_to_mousewheel(e, container))
        return func(cls, container, **kw)
    return wrapped

class ScrolledTreeView(AutoScroll, ttk.Treeview):
    '''A standard ttk Treeview widget with scrollbars that will
    automatically show/hide as needed.'''
    @_create_container
    def __init__(self, master, **kw):
        ttk.Treeview.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

import platform
def _bound_to_mousewheel(event, widget):
    child = widget.winfo_children()[0]
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        child.bind_all('<MouseWheel>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-MouseWheel>', lambda e: _on_shiftmouse(e, child))
    else:
        child.bind_all('<Button-4>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Button-5>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-Button-4>', lambda e: _on_shiftmouse(e, child))
        child.bind_all('<Shift-Button-5>', lambda e: _on_shiftmouse(e, child))

def _unbound_to_mousewheel(event, widget):
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        widget.unbind_all('<MouseWheel>')
        widget.unbind_all('<Shift-MouseWheel>')
    else:
        widget.unbind_all('<Button-4>')
        widget.unbind_all('<Button-5>')
        widget.unbind_all('<Shift-Button-4>')
        widget.unbind_all('<Shift-Button-5>')

def _on_mousewheel(event, widget):
    if platform.system() == 'Windows':
        widget.yview_scroll(-1*int(event.delta/120),'units')
    elif platform.system() == 'Darwin':
        widget.yview_scroll(-1*int(event.delta),'units')
    else:
        if event.num == 4:
            widget.yview_scroll(-1, 'units')
        elif event.num == 5:
            widget.yview_scroll(1, 'units')

def _on_shiftmouse(event, widget):
    if platform.system() == 'Windows':
        widget.xview_scroll(-1*int(event.delta/120), 'units')
    elif platform.system() == 'Darwin':
        widget.xview_scroll(-1*int(event.delta), 'units')
    else:
        if event.num == 4:
            widget.xview_scroll(-1, 'units')
        elif event.num == 5:
            widget.xview_scroll(1, 'units')

if __name__ == '__main__':
    vp_start_gui()





